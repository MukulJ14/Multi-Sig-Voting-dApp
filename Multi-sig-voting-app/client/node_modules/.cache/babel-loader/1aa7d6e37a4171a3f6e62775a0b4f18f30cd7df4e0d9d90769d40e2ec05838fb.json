{"ast":null,"code":"var _jsxFileName = \"/Users/mukuljindal/Local/projects/fuckingwork/client/src/App.js\",\n  _s = $RefreshSig$();\nimport Candidate from \"./Components/Candidate.js\";\nimport { useState, useEffect } from \"react\";\nimport abi from './abi.js';\nimport \"./App.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ethers = require(\"ethers\");\n\n//contract address : 0x5FbDB2315678afecb367f032d93F642f64180aa3\n\n//add getter functions inside the contract to actually access anything through mappings\n//to access values of a struct in mapping, first return the promise, then use the variable rather than doing simultaneously\n//use ethers@6.7.1 to deploy and use ethers@5.7.2 to run\n//if there's an rpc error, cleat activity logs on metamask->settings->advanced->clear\n\nfunction App() {\n  _s();\n  const [arbiterCount, setArbiterCount] = useState(0);\n  const [arbiterAddress, setArbiterAddress] = useState(\"\");\n  const [arbiterStatus, setArbiterStatus] = useState(\"\");\n  const [candidatesCount, setCandidatesCount] = useState(0);\n  const [votingContract, setContract] = useState(\"\");\n  const [arbiterApprovalAddress, setArbiterApprovalAddress] = useState(\"\");\n  const [reasonRevertApproval, setReasonRevertApproval] = useState(\"\");\n  const [arbiterDelete, setArbiterDelete] = useState(\"\");\n  const [reasonRevertDelete, setReasonRevertDelete] = useState(\"\");\n  const [candidateAddress, setCandidateAddress] = useState(\"\");\n  const [candidateName, setCandidateName] = useState(\"\");\n  const [candidateSymbol, setCandidateSymbol] = useState(\"\");\n  let [candidates, setCandidates] = useState([]);\n  const [reasonRevertCanAdd, setReasonRevertCanAdd] = useState(\"\");\n  async function connect() {\n    if (window.ethereum) {\n      const provider = new ethers.providers.Web3Provider(window.ethereum);\n\n      // const accounts = await window.ethereum.request({ method: 'eth_requestAccounts' });\n      // console.log('Connected accounts:', accounts);\n      const signer = provider.getSigner(0);\n      const votingContract = new ethers.Contract(\"0x5FbDB2315678afecb367f032d93F642f64180aa3\", abi, signer);\n      setContract(votingContract);\n    }\n  }\n  async function getCandidatesCount() {\n    try {\n      let totalCan = await votingContract.getCandidateCount();\n      let num = totalCan.toNumber();\n      setCandidatesCount(num);\n    } catch (error) {\n      console.log(error);\n    }\n  }\n  async function getArbiterCount() {\n    try {\n      const totalArbiters = await votingContract.getArbiterCount();\n      const num = totalArbiters.toNumber();\n      setArbiterCount(num);\n    } catch (error) {\n      console.log(error);\n    }\n  }\n  useEffect(() => {\n    connect();\n    getCandidates();\n  }, []);\n  setTimeout(() => {\n    getCandidatesCount();\n    getArbiterCount();\n  }, 500);\n  if (candidates.length !== candidatesCount) {\n    getCandidates();\n  }\n  async function getArbiterStatus() {\n    if (!ethers.utils.isAddress(arbiterAddress)) {\n      setArbiterStatus(\"Invalid Ethereum Address\");\n      setTimeout(() => {\n        setArbiterStatus(\"\");\n      }, 1600);\n      return;\n    }\n    const resultObj = await votingContract.getArbiterStatus(arbiterAddress);\n    const result = resultObj.approved;\n    setArbiterStatus(result.toString());\n    setTimeout(() => {\n      setArbiterAddress(\"\");\n      setArbiterStatus(\"\");\n    }, 1600);\n  }\n  async function addArbiter() {\n    try {\n      if (!ethers.utils.isAddress(arbiterApprovalAddress)) {\n        setReasonRevertApproval(\"Invalid Ethereum Address\");\n        setTimeout(() => {\n          setReasonRevertApproval(\"\");\n        }, 1600);\n        return;\n      }\n      let add = await votingContract.addAndApproveArbiter(arbiterApprovalAddress);\n      await add.wait();\n      console.log(add);\n      votingContract.on(\"ArbiterAdded\", () => {\n        getArbiterCount();\n      });\n    } catch (error) {\n      setTimeout(() => {\n        if (error.message.includes(\"reverted with reason string 'You're not an Arbiter'\")) {\n          setReasonRevertApproval(\"Already Voted\");\n        } else if (error.message.includes(\"reverted with reason string 'Already Voted'\")) {\n          setReasonRevertApproval(\"Already Voted\");\n        } else {\n          console.log(\"Approve Arbiter Error:\", error);\n        }\n      }, 1600);\n    }\n  }\n  async function deleteArbiter() {\n    try {\n      if (!ethers.utils.isAddress(arbiterDelete)) {\n        setReasonRevertDelete(\"Invalid Ethereum Address\");\n        setTimeout(() => {\n          setReasonRevertDelete(\"\");\n        }, 1600);\n        return;\n      }\n      let deleted = await votingContract.deleteArbiter(arbiterDelete);\n      await deleted.wait();\n      setArbiterAddress(\"\");\n      setArbiterStatus(\"\");\n      console.log(deleted);\n    } catch (error) {\n      setTimeout(() => {\n        if (error.message.includes(\"reverted with reason string 'That's not an Arbiter'\")) {\n          setReasonRevertDelete(\"Address not an arbiter\");\n        } else if (error.message.includes(\"reverted with reason string 'You're not an Arbiter'\")) {\n          setReasonRevertDelete(\"You're not an arbiter\");\n        } else {\n          console.log(\"Delete Arbiter Error:\", error);\n        }\n      }, 1600);\n    }\n  }\n  async function addCandidateProposal() {\n    try {\n      if (!ethers.utils.isAddress(candidateAddress)) {\n        setReasonRevertCanAdd(\"Invalid Ethereum Address\");\n        setTimeout(() => {\n          setReasonRevertCanAdd(\"\");\n        }, 1600);\n        return;\n      }\n      if (candidateName === \"\" && candidateSymbol === \"\") {\n        setReasonRevertCanAdd(\"Empty Inputs\");\n        setTimeout(() => {\n          setReasonRevertCanAdd(\"\");\n        }, 1600);\n        return;\n      }\n      if (candidateName === \"\") {\n        setReasonRevertCanAdd(\"Empty Input\");\n        setTimeout(() => {\n          setReasonRevertCanAdd(\"\");\n        }, 1600);\n        return;\n      }\n      if (candidateSymbol === \"\") {\n        setReasonRevertCanAdd(\"Empty Input Symbol\");\n        setTimeout(() => {\n          setReasonRevertCanAdd(\"\");\n        }, 1600);\n        return;\n      }\n      const add = await votingContract.addCandidateProposal(candidateAddress, candidateName, candidateSymbol);\n      await add.wait();\n      console.log(add);\n      votingContract.on(\"CandidateAdded\", () => {\n        getCandidates();\n      });\n    } catch (error) {\n      setTimeout(() => {\n        if (error.message.includes(\"reverted with reason string 'Already Voted'\")) {\n          setReasonRevertCanAdd(\"Already Voted\");\n        } else if (error.message.includes(\"reverted with reason string 'You're not an Arbiter'\")) {\n          setReasonRevertCanAdd(\"You're not an  Arbiter\");\n        } else {\n          console.log(\"Candidate Add Error:\", error);\n        }\n      }, 1600);\n    }\n  }\n  async function getCandidates() {\n    let c = [];\n    for (let i = 0; i < candidatesCount; i++) {\n      let candidate = await votingContract.getCandidate(i);\n      c.push(candidate);\n    }\n    setCandidates(c);\n  }\n  if (candidates.length !== candidatesCount) {\n    getCandidates();\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"box arbiter-box\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Arbiter Count : \", arbiterCount]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 234,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 235,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"arbiter?\",\n        children: \"Arbiter \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 236,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        id: \"arbiter?\",\n        value: arbiterAddress,\n        onChange: event => {\n          setArbiterAddress(event.target.value);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 237,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"button\",\n        id: \"isArbiter\",\n        onClick: getArbiterStatus,\n        children: \"Check\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 241,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Status : \", arbiterStatus]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 242,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 243,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"No. of candidates : \", candidatesCount]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 244,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 246,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"addArbiter\",\n        children: \"Enter arbiter for adding :\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 248,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        id: \"addArbiter\",\n        value: arbiterApprovalAddress,\n        onChange: event => {\n          setArbiterApprovalAddress(event.target.value);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 249,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"button\",\n        id: \"addArbiterButton\",\n        onClick: addArbiter,\n        children: \"Add\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 253,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 255,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: reasonRevertApproval\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 257,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"deleteArbiter\",\n        children: \"Enter arbiter for delete :\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 260,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        id: \"deleteArbiter\",\n        value: arbiterDelete,\n        onChange: event => {\n          setArbiterDelete(event.target.value);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 261,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"button\",\n        id: \"deleteArbiterButton\",\n        onClick: deleteArbiter,\n        children: \"Approve\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 265,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 267,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: reasonRevertDelete\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 269,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 233,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"box candidate-box\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"candidateAddress\",\n        children: \"Enter candidate Address :\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 273,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        id: \"candidateAddress\",\n        value: candidateAddress,\n        onChange: event => {\n          setCandidateAddress(event.target.value);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 274,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 278,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"candidateName\",\n        children: \"Enter candidate Name :\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 279,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        id: \"candidateName\",\n        value: candidateName,\n        onChange: event => {\n          setCandidateName(event.target.value);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 280,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 284,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"candidateSymbol\",\n        children: \"Enter candidate Symbol :\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 285,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        id: \"candidateSymbol\",\n        value: candidateSymbol,\n        onChange: event => {\n          setCandidateSymbol(event.target.value);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 286,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 290,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"button\",\n        id: \"candidateAddButton\",\n        onClick: addCandidateProposal,\n        children: \"Add Candidate Proposal\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 291,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 292,\n        columnNumber: 9\n      }, this), reasonRevertCanAdd, candidates.map((candidate, index) => {\n        return /*#__PURE__*/_jsxDEV(Candidate, {\n          candidate: candidate,\n          index: index,\n          contract: votingContract,\n          candidatesCountFunction: getCandidatesCount\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 296,\n          columnNumber: 18\n        }, this);\n      })]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 272,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 232,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"Egd+aqvGuycxRekASvKQ53NsmqI=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["Candidate","useState","useEffect","abi","jsxDEV","_jsxDEV","ethers","require","App","_s","arbiterCount","setArbiterCount","arbiterAddress","setArbiterAddress","arbiterStatus","setArbiterStatus","candidatesCount","setCandidatesCount","votingContract","setContract","arbiterApprovalAddress","setArbiterApprovalAddress","reasonRevertApproval","setReasonRevertApproval","arbiterDelete","setArbiterDelete","reasonRevertDelete","setReasonRevertDelete","candidateAddress","setCandidateAddress","candidateName","setCandidateName","candidateSymbol","setCandidateSymbol","candidates","setCandidates","reasonRevertCanAdd","setReasonRevertCanAdd","connect","window","ethereum","provider","providers","Web3Provider","signer","getSigner","Contract","getCandidatesCount","totalCan","getCandidateCount","num","toNumber","error","console","log","getArbiterCount","totalArbiters","getCandidates","setTimeout","length","getArbiterStatus","utils","isAddress","resultObj","result","approved","toString","addArbiter","add","addAndApproveArbiter","wait","on","message","includes","deleteArbiter","deleted","addCandidateProposal","c","i","candidate","getCandidate","push","className","children","fileName","_jsxFileName","lineNumber","columnNumber","htmlFor","id","value","onChange","event","target","onClick","map","index","contract","candidatesCountFunction","_c","$RefreshReg$"],"sources":["/Users/mukuljindal/Local/projects/fuckingwork/client/src/App.js"],"sourcesContent":["import Candidate from \"./Components/Candidate.js\";\nimport { useState, useEffect } from \"react\";\nimport abi from './abi.js';\nimport \"./App.css\";\n\nconst ethers = require(\"ethers\");\n\n//contract address : 0x5FbDB2315678afecb367f032d93F642f64180aa3\n\n\n//add getter functions inside the contract to actually access anything through mappings\n//to access values of a struct in mapping, first return the promise, then use the variable rather than doing simultaneously\n//use ethers@6.7.1 to deploy and use ethers@5.7.2 to run\n//if there's an rpc error, cleat activity logs on metamask->settings->advanced->clear\n\nfunction App() {\n\n  const [arbiterCount, setArbiterCount] = useState(0);\n  const [arbiterAddress, setArbiterAddress] = useState(\"\");\n  const [arbiterStatus, setArbiterStatus] = useState(\"\");\n  const [candidatesCount, setCandidatesCount] = useState(0);\n  const [votingContract, setContract] = useState(\"\");\n  const [arbiterApprovalAddress, setArbiterApprovalAddress] = useState(\"\");\n  const [reasonRevertApproval, setReasonRevertApproval] = useState(\"\");\n  const [arbiterDelete, setArbiterDelete] = useState(\"\");\n  const [reasonRevertDelete, setReasonRevertDelete] = useState(\"\");\n  const [candidateAddress, setCandidateAddress] = useState(\"\");\n  const [candidateName, setCandidateName] = useState(\"\");\n  const [candidateSymbol, setCandidateSymbol] = useState(\"\");\n  let [candidates, setCandidates] = useState([]);\n  const [reasonRevertCanAdd, setReasonRevertCanAdd] = useState(\"\");\n\n\n  async function connect() {\n    if (window.ethereum) {\n      const provider = new ethers.providers.Web3Provider(window.ethereum);\n\n      // const accounts = await window.ethereum.request({ method: 'eth_requestAccounts' });\n      // console.log('Connected accounts:', accounts);\n      const signer = provider.getSigner(0);\n\n      const votingContract = new ethers.Contract(\"0x5FbDB2315678afecb367f032d93F642f64180aa3\", abi, signer);\n      setContract(votingContract);\n\n    }\n  }\n\n  async function getCandidatesCount() {\n    try {\n      let totalCan = await votingContract.getCandidateCount();\n      let num = totalCan.toNumber();\n      setCandidatesCount(num);\n    }\n    catch (error) {\n      console.log(error);\n    }\n  }\n\n  async function getArbiterCount() {\n    try {\n      const totalArbiters = await votingContract.getArbiterCount();\n      const num = totalArbiters.toNumber();\n      setArbiterCount(num);\n    } catch (error) {\n      console.log(error);\n    }\n  }\n\n  useEffect(() => {\n    connect();\n    getCandidates();\n  }, []);\n\n  setTimeout(() => {\n    getCandidatesCount();\n    getArbiterCount();\n  }, 500);\n\n  if (candidates.length !== candidatesCount) {\n    getCandidates();\n  }\n\n  async function getArbiterStatus() {\n    if (!ethers.utils.isAddress(arbiterAddress)) {\n      setArbiterStatus(\"Invalid Ethereum Address\");\n      setTimeout(() => {\n        setArbiterStatus(\"\");\n      }, 1600);\n      return;\n    }\n\n    const resultObj = await votingContract.getArbiterStatus(arbiterAddress);\n    const result = resultObj.approved;\n    setArbiterStatus(result.toString());\n    setTimeout(() => {\n      setArbiterAddress(\"\");\n      setArbiterStatus(\"\");\n    }, 1600);\n  }\n\n  async function addArbiter() {\n    try {\n      if (!ethers.utils.isAddress(arbiterApprovalAddress)) {\n        setReasonRevertApproval(\"Invalid Ethereum Address\");\n        setTimeout(() => {\n          setReasonRevertApproval(\"\");\n        }, 1600);\n        return;\n      }\n\n      let add = await votingContract.addAndApproveArbiter(arbiterApprovalAddress);\n      await add.wait();\n      console.log(add);\n\n      votingContract.on(\"ArbiterAdded\", () => {\n        getArbiterCount();\n      })\n    }\n    catch (error) {\n      setTimeout(() => {\n        if (error.message.includes(\"reverted with reason string 'You're not an Arbiter'\")) {\n          setReasonRevertApproval(\"Already Voted\");\n        } else if (error.message.includes(\"reverted with reason string 'Already Voted'\")) {\n          setReasonRevertApproval(\"Already Voted\");\n        } else {\n          console.log(\"Approve Arbiter Error:\", error);\n        }\n      }, 1600);\n\n    }\n  }\n\n  async function deleteArbiter() {\n    try {\n      if (!ethers.utils.isAddress(arbiterDelete)) {\n        setReasonRevertDelete(\"Invalid Ethereum Address\");\n        setTimeout(() => {\n          setReasonRevertDelete(\"\");\n        }, 1600);\n        return;\n      }\n\n      let deleted = await votingContract.deleteArbiter(arbiterDelete);\n      await deleted.wait();\n      setArbiterAddress(\"\");\n      setArbiterStatus(\"\");\n      console.log(deleted);\n    } catch (error) {\n      setTimeout(() => {\n        if (error.message.includes(\"reverted with reason string 'That's not an Arbiter'\")) {\n          setReasonRevertDelete(\"Address not an arbiter\");\n        } else if (error.message.includes(\"reverted with reason string 'You're not an Arbiter'\")) {\n          setReasonRevertDelete(\"You're not an arbiter\")\n        } else {\n          console.log(\"Delete Arbiter Error:\", error);\n        }\n      }, 1600);\n    }\n  }\n\n  async function addCandidateProposal() {\n    try {\n\n      if (!ethers.utils.isAddress(candidateAddress)) {\n        setReasonRevertCanAdd(\"Invalid Ethereum Address\");\n        setTimeout(() => {\n          setReasonRevertCanAdd(\"\");\n        }, 1600);\n        return;\n      }\n\n      if (candidateName === \"\" && candidateSymbol === \"\") {\n        setReasonRevertCanAdd(\"Empty Inputs\");\n        setTimeout(() => {\n          setReasonRevertCanAdd(\"\");\n        }, 1600);\n        return;\n      }\n\n      if (candidateName === \"\") {\n        setReasonRevertCanAdd(\"Empty Input\");\n        setTimeout(() => {\n          setReasonRevertCanAdd(\"\");\n        }, 1600);\n        return;\n      }\n\n      if (candidateSymbol === \"\") {\n        setReasonRevertCanAdd(\"Empty Input Symbol\");\n        setTimeout(() => {\n          setReasonRevertCanAdd(\"\");\n        }, 1600);\n        return;\n      }\n\n      const add = await votingContract.addCandidateProposal(candidateAddress, candidateName, candidateSymbol);\n      await add.wait();\n      console.log(add);\n\n      votingContract.on(\"CandidateAdded\", () => {\n        getCandidates();\n      })\n    }\n    catch (error) {\n      setTimeout(() => {\n        if (error.message.includes(\"reverted with reason string 'Already Voted'\")) {\n          setReasonRevertCanAdd(\"Already Voted\");\n        } else if (error.message.includes(\"reverted with reason string 'You're not an Arbiter'\")) {\n          setReasonRevertCanAdd(\"You're not an  Arbiter\");\n        } else {\n          console.log(\"Candidate Add Error:\", error);\n        }\n      }, 1600)\n    }\n  }\n\n  async function getCandidates() {\n    let c = [];\n    for (let i = 0; i < candidatesCount; i++) {\n      let candidate = await votingContract.getCandidate(i);\n      c.push(candidate);\n    }\n    setCandidates(c);\n  }\n\n  if (candidates.length !== candidatesCount) {\n    getCandidates();\n  }\n\n\n  return (\n    <div className=\"App\">\n      <div className=\"box arbiter-box\">\n        <p>Arbiter Count : {arbiterCount}</p>\n        <br />\n        <label htmlFor='arbiter?'>Arbiter </label>\n        <input id='arbiter?' value={arbiterAddress}\n          onChange={(event) => {\n            setArbiterAddress(event.target.value)\n          }} />\n        <button className=\"button\" id='isArbiter' onClick={getArbiterStatus}>Check</button>\n        <p>Status : {arbiterStatus}</p>\n        <br />\n        <p>No. of candidates : {candidatesCount}</p>\n\n        <br />\n\n        <label htmlFor=\"addArbiter\">Enter arbiter for adding :</label>\n        <input id='addArbiter' value={arbiterApprovalAddress}\n          onChange={(event) => {\n            setArbiterApprovalAddress(event.target.value)\n          }} />\n        <button className=\"button\" id=\"addArbiterButton\" onClick={addArbiter}>Add</button>\n\n        <br />\n\n        <p>{reasonRevertApproval}</p>\n\n\n        <label htmlFor=\"deleteArbiter\">Enter arbiter for delete :</label>\n        <input id='deleteArbiter' value={arbiterDelete}\n          onChange={(event) => {\n            setArbiterDelete(event.target.value);\n          }} />\n        <button className=\"button\" id=\"deleteArbiterButton\" onClick={deleteArbiter}>Approve</button>\n\n        <br />\n\n        <p>{reasonRevertDelete}</p>\n      </div>\n\n      <div className=\"box candidate-box\">\n        <label htmlFor=\"candidateAddress\">Enter candidate Address :</label>\n        <input id='candidateAddress' value={candidateAddress}\n          onChange={(event) => {\n            setCandidateAddress(event.target.value);\n          }} />\n        <br />\n        <label htmlFor=\"candidateName\">Enter candidate Name :</label>\n        <input id='candidateName' value={candidateName}\n          onChange={(event) => {\n            setCandidateName(event.target.value);\n          }} />\n        <br />\n        <label htmlFor=\"candidateSymbol\">Enter candidate Symbol :</label>\n        <input id='candidateSymbol' value={candidateSymbol}\n          onChange={(event) => {\n            setCandidateSymbol(event.target.value);\n          }} />\n        <br />\n        <button className=\"button\" id=\"candidateAddButton\" onClick={addCandidateProposal}>Add Candidate Proposal</button>\n        <br />\n        {reasonRevertCanAdd}\n\n        {candidates.map((candidate, index) => {\n          return <Candidate candidate={candidate} key={index} index={index} contract={votingContract} candidatesCountFunction={getCandidatesCount} />;\n\n        })}\n      </div>\n    </div >\n  );\n}\n\nexport default App;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}