{"ast":null,"code":"var _jsxFileName = \"/Users/mukuljindal/Local/projects/fuckingwork/client/src/App.js\",\n  _s = $RefreshSig$();\nimport Candidate from \"./Components/Candidate.js\";\nimport { useState, useEffect } from \"react\";\nimport abi from './abi.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ethers = require(\"ethers\");\n\n//contract address : 0x5FbDB2315678afecb367f032d93F642f64180aa3\n\n//add getter functions inside the contract to actually access anything through mappings\n//to access values of a struct in mapping, first return the promise, then use the variable rather than doing simultaneously\n//use ethers@6.7.1 to deploy and use ethers@5.7.2 to run\n//if there's an rpc error, cleat activity logs on metamask->settings->advanced->clear\n\nfunction App() {\n  _s();\n  const [address, setAddress] = useState(\"\");\n  const [arbiterAddress, setArbiterAddress] = useState(\"\");\n  const [arbiterStatus, setArbiterStatus] = useState(\"\");\n  const [candidatesCount, setCandidatesCount] = useState(0);\n  const [votingContract, setContract] = useState(\"\");\n  const [arbiterApprovalAddress, setArbiterApprovalAddress] = useState(\"\");\n  const [reasonRevertApproval, setReasonRevertApproval] = useState(\"\");\n  const [arbiterDelete, setArbiterDelete] = useState(\"\");\n  const [reasonRevertDelete, setReasonRevertDelete] = useState(\"\");\n  const [candidateAddress, setCandidateAddress] = useState(\"\");\n  const [candidateName, setCandidateName] = useState(\"\");\n  const [candidateSymbol, setCandidateSymbol] = useState(\"\");\n  let [candidates, setCandidates] = useState([]);\n  const [reasonRevertCanAdd, setReasonRevertCanAdd] = useState(\"\");\n  async function connect() {\n    if (window.ethereum) {\n      const provider = new ethers.providers.Web3Provider(window.ethereum);\n\n      // const accounts = await window.ethereum.request({ method: 'eth_requestAccounts' });\n      // console.log('Connected accounts:', accounts);\n      const signer = provider.getSigner(0);\n      const votingContract = new ethers.Contract(\"0x5FbDB2315678afecb367f032d93F642f64180aa3\", abi, signer);\n      setContract(votingContract);\n    }\n  }\n  async function getCandidatesCount() {\n    try {\n      let totalCan = await votingContract.candidatesCount();\n      let num = totalCan.toNumber();\n      setCandidatesCount(num);\n    } catch (error) {\n      console.log(error);\n    }\n  }\n  useEffect(() => {\n    connect();\n    getCandidates();\n  }, []);\n  setTimeout(() => {\n    getCandidatesCount();\n  }, 500);\n  async function getArbiterCount() {\n    const totalArbiters = await votingContract.arbiterCount();\n    const num = totalArbiters.toNumber();\n    setAddress(num);\n    setTimeout(() => {\n      setAddress(\"\");\n    }, 1600);\n  }\n  async function getArbiterStatus() {\n    if (!ethers.utils.isAddress(arbiterAddress)) {\n      setArbiterStatus(\"Invalid Ethereum Address\");\n      setTimeout(() => {\n        setArbiterStatus(\"\");\n      }, 1600);\n      return;\n    }\n    const resultObj = await votingContract.arbiterStatus(arbiterAddress);\n    const result = resultObj.approved;\n    setArbiterStatus(result.toString());\n    setTimeout(() => {\n      setArbiterAddress(\"\");\n      setArbiterStatus(\"\");\n    }, 1600);\n  }\n  async function addArbiter() {\n    try {\n      if (!ethers.utils.isAddress(arbiterApprovalAddress)) {\n        setReasonRevertApproval(\"Invalid Ethereum Address\");\n        setTimeout(() => {\n          setReasonRevertApproval(\"\");\n        }, 1600);\n        return;\n      }\n      let add = await votingContract.addAndApproveArbiter(arbiterApprovalAddress);\n      await add.wait();\n      console.log(add);\n    } catch (error) {\n      setTimeout(() => {\n        if (error.message.includes(\"reverted with reason string 'Already Voted'\")) {\n          setReasonRevertApproval(\"Already Voted\");\n        } else {\n          console.log(\"Approve Arbiter Error:\", error);\n        }\n      }, 1600);\n    }\n  }\n  async function deleteArbiter() {\n    try {\n      if (!ethers.utils.isAddress(arbiterDelete)) {\n        setReasonRevertDelete(\"Invalid Ethereum Address\");\n        setTimeout(() => {\n          setReasonRevertDelete(\"\");\n        }, 1600);\n        return;\n      }\n      let deleted = await votingContract.deleteArbiter(arbiterDelete);\n      await deleted.wait();\n      setArbiterAddress(\"\");\n      setArbiterStatus(\"\");\n      console.log(deleted);\n    } catch (error) {\n      setTimeout(() => {\n        if (error.message.includes(\"reverted with reason string 'That's not an Arbiter'\")) {\n          setReasonRevertDelete(\"Address not an arbiter\");\n        } else if (error.message.includes(\"reverted with reason string 'You're not an Arbiter'\")) {\n          setReasonRevertDelete(\"You're not an arbiter\");\n        } else {\n          console.log(\"Delete Arbiter Error:\", error);\n        }\n      }, 1600);\n    }\n  }\n  async function addCandidateProposal() {\n    try {\n      if (!ethers.utils.isAddress(candidateAddress)) {\n        setReasonRevertCanAdd(\"Invalid Ethereum Address\");\n        setTimeout(() => {\n          setReasonRevertCanAdd(\"\");\n        }, 1600);\n        return;\n      }\n      if (candidateName === \"\" && candidateSymbol === \"\") {\n        setReasonRevertCanAdd(\"Empty Inputs\");\n        setTimeout(() => {\n          setReasonRevertCanAdd(\"\");\n        }, 1600);\n        return;\n      }\n      if (candidateName === \"\") {\n        setReasonRevertCanAdd(\"Empty Input\");\n        setTimeout(() => {\n          setReasonRevertCanAdd(\"\");\n        }, 1600);\n        return;\n      }\n      if (candidateSymbol === \"\") {\n        setReasonRevertCanAdd(\"Empty Input Symbol\");\n        setTimeout(() => {\n          setReasonRevertCanAdd(\"\");\n        }, 1600);\n        return;\n      }\n      const add = await votingContract.addCandidateProposal(candidateAddress, candidateName, candidateSymbol);\n      await add.wait();\n      console.log(add);\n      votingContract.on(\"CandidateAdded\", () => {\n        getCandidatesCount();\n      });\n    } catch (error) {\n      setTimeout(() => {\n        if (error.message.includes(\"reverted with reason string 'Already Voted'\")) {\n          setReasonRevertCanAdd(\"Already Voted\");\n        } else if (error.message.includes(\"reverted with reason string 'You're not an Arbiter'\")) {\n          setReasonRevertCanAdd(\"You're not an  Arbiter\");\n        } else {\n          console.log(\"Candidate Add Error:\", error);\n        }\n      }, 1600);\n    }\n  }\n  async function getCandidates() {\n    let c = [];\n    for (let i = 0; i < candidatesCount; i++) {\n      let candidate = await votingContract.getCandidate(i);\n      c.push(candidate);\n    }\n    setCandidates(c);\n  }\n  if (candidates.length !== candidatesCount) {\n    getCandidates();\n  }\n\n  //setInterval(getCandidates, 1000);\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      id: \"getAddress\",\n      onClick: getArbiterCount,\n      children: \"Arbiter Count\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 223,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: address\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 224,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 225,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: \"arbiter?\",\n      children: \"Arbiter \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 226,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      id: \"arbiter?\",\n      value: arbiterAddress,\n      onChange: event => {\n        setArbiterAddress(event.target.value);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 227,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      id: \"isAnArbiter\",\n      onClick: getArbiterStatus,\n      children: \"Check\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 231,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Status : \", arbiterStatus]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 232,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 233,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"No. of candidates : \", candidatesCount]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 234,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 236,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: \"addArbiter\",\n      children: \"Enter arbiter for adding :\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 238,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      id: \"addArbiter\",\n      value: arbiterApprovalAddress,\n      onChange: event => {\n        setArbiterApprovalAddress(event.target.value);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 239,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      id: \"addArbiterButton\",\n      onClick: addArbiter,\n      children: \"Add\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 243,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 245,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: reasonRevertApproval\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 247,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: \"deleteArbiter\",\n      children: \"Enter arbiter for delete :\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 250,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      id: \"deleteArbiter\",\n      value: arbiterDelete,\n      onChange: event => {\n        setArbiterDelete(event.target.value);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 251,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      id: \"deleteArbiterButton\",\n      onClick: deleteArbiter,\n      children: \"Approve\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 255,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 257,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: reasonRevertDelete\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 259,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: \"candidateAddress\",\n      children: \"Enter candidate Address :\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 261,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      id: \"candidateAddress\",\n      value: candidateAddress,\n      onChange: event => {\n        setCandidateAddress(event.target.value);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 262,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 266,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: \"candidateName\",\n      children: \"Enter candidate Name :\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 267,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      id: \"candidateName\",\n      value: candidateName,\n      onChange: event => {\n        setCandidateName(event.target.value);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 268,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 272,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: \"candidateSymbol\",\n      children: \"Enter candidate Symbol :\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 273,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      id: \"candidateSymbol\",\n      value: candidateSymbol,\n      onChange: event => {\n        setCandidateSymbol(event.target.value);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 274,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 278,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      id: \"candidateAddButton\",\n      onClick: addCandidateProposal,\n      children: \"Add Candidate Proposal\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 279,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 280,\n      columnNumber: 7\n    }, this), reasonRevertCanAdd, candidates.map((candidate, index) => {\n      return /*#__PURE__*/_jsxDEV(Candidate, {\n        candidate: candidate,\n        index: index\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 284,\n        columnNumber: 16\n      }, this);\n    })]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 222,\n    columnNumber: 5\n  }, this);\n}\n\n//<button id=\"getCandidatesCountButton\" onClick={getCandidatesCount}>Check</button>\n//<button id=\"geCandidates\" onClick={getCandidates}>get Candidates</button>\n\n// {(candidates.length !== 0) ? candidates.map((candidate, index) => {\n//   return <Candidate key={index} candidate={candidate} />\n// }) : 1}\n_s(App, \"hPeY2Bw5MKPYEaqoAibCpv1dONE=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["Candidate","useState","useEffect","abi","jsxDEV","_jsxDEV","ethers","require","App","_s","address","setAddress","arbiterAddress","setArbiterAddress","arbiterStatus","setArbiterStatus","candidatesCount","setCandidatesCount","votingContract","setContract","arbiterApprovalAddress","setArbiterApprovalAddress","reasonRevertApproval","setReasonRevertApproval","arbiterDelete","setArbiterDelete","reasonRevertDelete","setReasonRevertDelete","candidateAddress","setCandidateAddress","candidateName","setCandidateName","candidateSymbol","setCandidateSymbol","candidates","setCandidates","reasonRevertCanAdd","setReasonRevertCanAdd","connect","window","ethereum","provider","providers","Web3Provider","signer","getSigner","Contract","getCandidatesCount","totalCan","num","toNumber","error","console","log","getCandidates","setTimeout","getArbiterCount","totalArbiters","arbiterCount","getArbiterStatus","utils","isAddress","resultObj","result","approved","toString","addArbiter","add","addAndApproveArbiter","wait","message","includes","deleteArbiter","deleted","addCandidateProposal","on","c","i","candidate","getCandidate","push","length","className","children","id","onClick","fileName","_jsxFileName","lineNumber","columnNumber","htmlFor","value","onChange","event","target","map","index","_c","$RefreshReg$"],"sources":["/Users/mukuljindal/Local/projects/fuckingwork/client/src/App.js"],"sourcesContent":["import Candidate from \"./Components/Candidate.js\";\nimport { useState, useEffect } from \"react\";\nimport abi from './abi.js';\nconst ethers = require(\"ethers\");\n\n//contract address : 0x5FbDB2315678afecb367f032d93F642f64180aa3\n\n\n//add getter functions inside the contract to actually access anything through mappings\n//to access values of a struct in mapping, first return the promise, then use the variable rather than doing simultaneously\n//use ethers@6.7.1 to deploy and use ethers@5.7.2 to run\n//if there's an rpc error, cleat activity logs on metamask->settings->advanced->clear\n\nfunction App() {\n\n  const [address, setAddress] = useState(\"\");\n  const [arbiterAddress, setArbiterAddress] = useState(\"\");\n  const [arbiterStatus, setArbiterStatus] = useState(\"\");\n  const [candidatesCount, setCandidatesCount] = useState(0);\n  const [votingContract, setContract] = useState(\"\");\n  const [arbiterApprovalAddress, setArbiterApprovalAddress] = useState(\"\");\n  const [reasonRevertApproval, setReasonRevertApproval] = useState(\"\");\n  const [arbiterDelete, setArbiterDelete] = useState(\"\");\n  const [reasonRevertDelete, setReasonRevertDelete] = useState(\"\");\n  const [candidateAddress, setCandidateAddress] = useState(\"\");\n  const [candidateName, setCandidateName] = useState(\"\");\n  const [candidateSymbol, setCandidateSymbol] = useState(\"\");\n  let [candidates, setCandidates] = useState([]);\n  const [reasonRevertCanAdd, setReasonRevertCanAdd] = useState(\"\");\n\n\n  async function connect() {\n    if (window.ethereum) {\n      const provider = new ethers.providers.Web3Provider(window.ethereum);\n\n      // const accounts = await window.ethereum.request({ method: 'eth_requestAccounts' });\n      // console.log('Connected accounts:', accounts);\n      const signer = provider.getSigner(0);\n\n      const votingContract = new ethers.Contract(\"0x5FbDB2315678afecb367f032d93F642f64180aa3\", abi, signer);\n      setContract(votingContract);\n\n    }\n  }\n\n  async function getCandidatesCount() {\n    try {\n      let totalCan = await votingContract.candidatesCount();\n      let num = totalCan.toNumber();\n      setCandidatesCount(num);\n    }\n    catch (error) {\n      console.log(error);\n    }\n  }\n\n  useEffect(() => {\n    connect();\n    getCandidates();\n  }, []);\n\n  setTimeout(() => {\n    getCandidatesCount()\n  }, 500);\n\n  async function getArbiterCount() {\n    const totalArbiters = await votingContract.arbiterCount();\n    const num = totalArbiters.toNumber();\n    setAddress(num);\n    setTimeout(() => {\n      setAddress(\"\");\n    }, 1600);\n\n  }\n\n  async function getArbiterStatus() {\n    if (!ethers.utils.isAddress(arbiterAddress)) {\n      setArbiterStatus(\"Invalid Ethereum Address\");\n      setTimeout(() => {\n        setArbiterStatus(\"\");\n      }, 1600);\n      return;\n    }\n\n    const resultObj = await votingContract.arbiterStatus(arbiterAddress);\n    const result = resultObj.approved;\n    setArbiterStatus(result.toString());\n    setTimeout(() => {\n      setArbiterAddress(\"\");\n      setArbiterStatus(\"\");\n    }, 1600);\n  }\n\n  async function addArbiter() {\n    try {\n      if (!ethers.utils.isAddress(arbiterApprovalAddress)) {\n        setReasonRevertApproval(\"Invalid Ethereum Address\");\n        setTimeout(() => {\n          setReasonRevertApproval(\"\");\n        }, 1600);\n        return;\n      }\n\n      let add = await votingContract.addAndApproveArbiter(arbiterApprovalAddress);\n      await add.wait();\n      console.log(add);\n    }\n    catch (error) {\n      setTimeout(() => {\n\n        if (error.message.includes(\"reverted with reason string 'Already Voted'\")) {\n          setReasonRevertApproval(\"Already Voted\");\n        } else {\n          console.log(\"Approve Arbiter Error:\", error);\n        }\n      }, 1600);\n\n    }\n  }\n\n  async function deleteArbiter() {\n    try {\n      if (!ethers.utils.isAddress(arbiterDelete)) {\n        setReasonRevertDelete(\"Invalid Ethereum Address\");\n        setTimeout(() => {\n          setReasonRevertDelete(\"\");\n        }, 1600);\n        return;\n      }\n\n      let deleted = await votingContract.deleteArbiter(arbiterDelete);\n      await deleted.wait();\n      setArbiterAddress(\"\");\n      setArbiterStatus(\"\");\n      console.log(deleted);\n    } catch (error) {\n      setTimeout(() => {\n        if (error.message.includes(\"reverted with reason string 'That's not an Arbiter'\")) {\n          setReasonRevertDelete(\"Address not an arbiter\");\n        } else if (error.message.includes(\"reverted with reason string 'You're not an Arbiter'\")) {\n          setReasonRevertDelete(\"You're not an arbiter\")\n        } else {\n          console.log(\"Delete Arbiter Error:\", error);\n        }\n      }, 1600);\n    }\n  }\n\n  async function addCandidateProposal() {\n    try {\n\n      if (!ethers.utils.isAddress(candidateAddress)) {\n        setReasonRevertCanAdd(\"Invalid Ethereum Address\");\n        setTimeout(() => {\n          setReasonRevertCanAdd(\"\");\n        }, 1600);\n        return;\n      }\n\n      if (candidateName === \"\" && candidateSymbol === \"\") {\n        setReasonRevertCanAdd(\"Empty Inputs\");\n        setTimeout(() => {\n          setReasonRevertCanAdd(\"\");\n        }, 1600);\n        return;\n      }\n\n      if (candidateName === \"\") {\n        setReasonRevertCanAdd(\"Empty Input\");\n        setTimeout(() => {\n          setReasonRevertCanAdd(\"\");\n        }, 1600);\n        return;\n      }\n\n      if (candidateSymbol === \"\") {\n        setReasonRevertCanAdd(\"Empty Input Symbol\");\n        setTimeout(() => {\n          setReasonRevertCanAdd(\"\");\n        }, 1600);\n        return;\n      }\n\n      const add = await votingContract.addCandidateProposal(candidateAddress, candidateName, candidateSymbol);\n      await add.wait();\n      console.log(add);\n\n      votingContract.on(\"CandidateAdded\", () => {\n        getCandidatesCount();\n      })\n    }\n    catch (error) {\n      setTimeout(() => {\n        if (error.message.includes(\"reverted with reason string 'Already Voted'\")) {\n          setReasonRevertCanAdd(\"Already Voted\");\n        } else if (error.message.includes(\"reverted with reason string 'You're not an Arbiter'\")) {\n          setReasonRevertCanAdd(\"You're not an  Arbiter\");\n        } else {\n          console.log(\"Candidate Add Error:\", error);\n        }\n      }, 1600)\n    }\n  }\n\n  async function getCandidates() {\n    let c = [];\n    for (let i = 0; i < candidatesCount; i++) {\n      let candidate = await votingContract.getCandidate(i);\n      c.push(candidate);\n    }\n    setCandidates(c);\n  }\n\n  if (candidates.length !== candidatesCount) {\n    getCandidates();\n  }\n\n\n  //setInterval(getCandidates, 1000);\n\n  return (\n    <div className=\"App\">\n      <button id=\"getAddress\" onClick={getArbiterCount}>Arbiter Count</button>\n      <p>{address}</p>\n      <br />\n      <label htmlFor='arbiter?'>Arbiter </label>\n      <input id='arbiter?' value={arbiterAddress}\n        onChange={(event) => {\n          setArbiterAddress(event.target.value)\n        }} />\n      <button id='isAnArbiter' onClick={getArbiterStatus}>Check</button>\n      <p>Status : {arbiterStatus}</p>\n      <br />\n      <p>No. of candidates : {candidatesCount}</p>\n\n      <br />\n\n      <label htmlFor=\"addArbiter\">Enter arbiter for adding :</label>\n      <input id='addArbiter' value={arbiterApprovalAddress}\n        onChange={(event) => {\n          setArbiterApprovalAddress(event.target.value)\n        }} />\n      <button id=\"addArbiterButton\" onClick={addArbiter}>Add</button>\n\n      <br />\n\n      <p>{reasonRevertApproval}</p>\n\n\n      <label htmlFor=\"deleteArbiter\">Enter arbiter for delete :</label>\n      <input id='deleteArbiter' value={arbiterDelete}\n        onChange={(event) => {\n          setArbiterDelete(event.target.value);\n        }} />\n      <button id=\"deleteArbiterButton\" onClick={deleteArbiter}>Approve</button>\n\n      <br />\n\n      <p>{reasonRevertDelete}</p>\n\n      <label htmlFor=\"candidateAddress\">Enter candidate Address :</label>\n      <input id='candidateAddress' value={candidateAddress}\n        onChange={(event) => {\n          setCandidateAddress(event.target.value);\n        }} />\n      <br />\n      <label htmlFor=\"candidateName\">Enter candidate Name :</label>\n      <input id='candidateName' value={candidateName}\n        onChange={(event) => {\n          setCandidateName(event.target.value);\n        }} />\n      <br />\n      <label htmlFor=\"candidateSymbol\">Enter candidate Symbol :</label>\n      <input id='candidateSymbol' value={candidateSymbol}\n        onChange={(event) => {\n          setCandidateSymbol(event.target.value);\n        }} />\n      <br />\n      <button id=\"candidateAddButton\" onClick={addCandidateProposal}>Add Candidate Proposal</button>\n      <br />\n      {reasonRevertCanAdd}\n\n      {candidates.map((candidate, index) => {\n        return <Candidate candidate={candidate} key={index} index={index} />;\n      })}\n\n    </div>\n  );\n}\n\n//<button id=\"getCandidatesCountButton\" onClick={getCandidatesCount}>Check</button>\n//<button id=\"geCandidates\" onClick={getCandidates}>get Candidates</button>\n\n// {(candidates.length !== 0) ? candidates.map((candidate, index) => {\n//   return <Candidate key={index} candidate={candidate} />\n// }) : 1}\nexport default App;"],"mappings":";;AAAA,OAAOA,SAAS,MAAM,2BAA2B;AACjD,SAASC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAC3C,OAAOC,GAAG,MAAM,UAAU;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAC3B,MAAMC,MAAM,GAAGC,OAAO,CAAC,QAAQ,CAAC;;AAEhC;;AAGA;AACA;AACA;AACA;;AAEA,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EAEb,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EAC1C,MAAM,CAACW,cAAc,EAAEC,iBAAiB,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;EACxD,MAAM,CAACa,aAAa,EAAEC,gBAAgB,CAAC,GAAGd,QAAQ,CAAC,EAAE,CAAC;EACtD,MAAM,CAACe,eAAe,EAAEC,kBAAkB,CAAC,GAAGhB,QAAQ,CAAC,CAAC,CAAC;EACzD,MAAM,CAACiB,cAAc,EAAEC,WAAW,CAAC,GAAGlB,QAAQ,CAAC,EAAE,CAAC;EAClD,MAAM,CAACmB,sBAAsB,EAAEC,yBAAyB,CAAC,GAAGpB,QAAQ,CAAC,EAAE,CAAC;EACxE,MAAM,CAACqB,oBAAoB,EAAEC,uBAAuB,CAAC,GAAGtB,QAAQ,CAAC,EAAE,CAAC;EACpE,MAAM,CAACuB,aAAa,EAAEC,gBAAgB,CAAC,GAAGxB,QAAQ,CAAC,EAAE,CAAC;EACtD,MAAM,CAACyB,kBAAkB,EAAEC,qBAAqB,CAAC,GAAG1B,QAAQ,CAAC,EAAE,CAAC;EAChE,MAAM,CAAC2B,gBAAgB,EAAEC,mBAAmB,CAAC,GAAG5B,QAAQ,CAAC,EAAE,CAAC;EAC5D,MAAM,CAAC6B,aAAa,EAAEC,gBAAgB,CAAC,GAAG9B,QAAQ,CAAC,EAAE,CAAC;EACtD,MAAM,CAAC+B,eAAe,EAAEC,kBAAkB,CAAC,GAAGhC,QAAQ,CAAC,EAAE,CAAC;EAC1D,IAAI,CAACiC,UAAU,EAAEC,aAAa,CAAC,GAAGlC,QAAQ,CAAC,EAAE,CAAC;EAC9C,MAAM,CAACmC,kBAAkB,EAAEC,qBAAqB,CAAC,GAAGpC,QAAQ,CAAC,EAAE,CAAC;EAGhE,eAAeqC,OAAOA,CAAA,EAAG;IACvB,IAAIC,MAAM,CAACC,QAAQ,EAAE;MACnB,MAAMC,QAAQ,GAAG,IAAInC,MAAM,CAACoC,SAAS,CAACC,YAAY,CAACJ,MAAM,CAACC,QAAQ,CAAC;;MAEnE;MACA;MACA,MAAMI,MAAM,GAAGH,QAAQ,CAACI,SAAS,CAAC,CAAC,CAAC;MAEpC,MAAM3B,cAAc,GAAG,IAAIZ,MAAM,CAACwC,QAAQ,CAAC,4CAA4C,EAAE3C,GAAG,EAAEyC,MAAM,CAAC;MACrGzB,WAAW,CAACD,cAAc,CAAC;IAE7B;EACF;EAEA,eAAe6B,kBAAkBA,CAAA,EAAG;IAClC,IAAI;MACF,IAAIC,QAAQ,GAAG,MAAM9B,cAAc,CAACF,eAAe,CAAC,CAAC;MACrD,IAAIiC,GAAG,GAAGD,QAAQ,CAACE,QAAQ,CAAC,CAAC;MAC7BjC,kBAAkB,CAACgC,GAAG,CAAC;IACzB,CAAC,CACD,OAAOE,KAAK,EAAE;MACZC,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC;IACpB;EACF;EAEAjD,SAAS,CAAC,MAAM;IACdoC,OAAO,CAAC,CAAC;IACTgB,aAAa,CAAC,CAAC;EACjB,CAAC,EAAE,EAAE,CAAC;EAENC,UAAU,CAAC,MAAM;IACfR,kBAAkB,CAAC,CAAC;EACtB,CAAC,EAAE,GAAG,CAAC;EAEP,eAAeS,eAAeA,CAAA,EAAG;IAC/B,MAAMC,aAAa,GAAG,MAAMvC,cAAc,CAACwC,YAAY,CAAC,CAAC;IACzD,MAAMT,GAAG,GAAGQ,aAAa,CAACP,QAAQ,CAAC,CAAC;IACpCvC,UAAU,CAACsC,GAAG,CAAC;IACfM,UAAU,CAAC,MAAM;MACf5C,UAAU,CAAC,EAAE,CAAC;IAChB,CAAC,EAAE,IAAI,CAAC;EAEV;EAEA,eAAegD,gBAAgBA,CAAA,EAAG;IAChC,IAAI,CAACrD,MAAM,CAACsD,KAAK,CAACC,SAAS,CAACjD,cAAc,CAAC,EAAE;MAC3CG,gBAAgB,CAAC,0BAA0B,CAAC;MAC5CwC,UAAU,CAAC,MAAM;QACfxC,gBAAgB,CAAC,EAAE,CAAC;MACtB,CAAC,EAAE,IAAI,CAAC;MACR;IACF;IAEA,MAAM+C,SAAS,GAAG,MAAM5C,cAAc,CAACJ,aAAa,CAACF,cAAc,CAAC;IACpE,MAAMmD,MAAM,GAAGD,SAAS,CAACE,QAAQ;IACjCjD,gBAAgB,CAACgD,MAAM,CAACE,QAAQ,CAAC,CAAC,CAAC;IACnCV,UAAU,CAAC,MAAM;MACf1C,iBAAiB,CAAC,EAAE,CAAC;MACrBE,gBAAgB,CAAC,EAAE,CAAC;IACtB,CAAC,EAAE,IAAI,CAAC;EACV;EAEA,eAAemD,UAAUA,CAAA,EAAG;IAC1B,IAAI;MACF,IAAI,CAAC5D,MAAM,CAACsD,KAAK,CAACC,SAAS,CAACzC,sBAAsB,CAAC,EAAE;QACnDG,uBAAuB,CAAC,0BAA0B,CAAC;QACnDgC,UAAU,CAAC,MAAM;UACfhC,uBAAuB,CAAC,EAAE,CAAC;QAC7B,CAAC,EAAE,IAAI,CAAC;QACR;MACF;MAEA,IAAI4C,GAAG,GAAG,MAAMjD,cAAc,CAACkD,oBAAoB,CAAChD,sBAAsB,CAAC;MAC3E,MAAM+C,GAAG,CAACE,IAAI,CAAC,CAAC;MAChBjB,OAAO,CAACC,GAAG,CAACc,GAAG,CAAC;IAClB,CAAC,CACD,OAAOhB,KAAK,EAAE;MACZI,UAAU,CAAC,MAAM;QAEf,IAAIJ,KAAK,CAACmB,OAAO,CAACC,QAAQ,CAAC,6CAA6C,CAAC,EAAE;UACzEhD,uBAAuB,CAAC,eAAe,CAAC;QAC1C,CAAC,MAAM;UACL6B,OAAO,CAACC,GAAG,CAAC,wBAAwB,EAAEF,KAAK,CAAC;QAC9C;MACF,CAAC,EAAE,IAAI,CAAC;IAEV;EACF;EAEA,eAAeqB,aAAaA,CAAA,EAAG;IAC7B,IAAI;MACF,IAAI,CAAClE,MAAM,CAACsD,KAAK,CAACC,SAAS,CAACrC,aAAa,CAAC,EAAE;QAC1CG,qBAAqB,CAAC,0BAA0B,CAAC;QACjD4B,UAAU,CAAC,MAAM;UACf5B,qBAAqB,CAAC,EAAE,CAAC;QAC3B,CAAC,EAAE,IAAI,CAAC;QACR;MACF;MAEA,IAAI8C,OAAO,GAAG,MAAMvD,cAAc,CAACsD,aAAa,CAAChD,aAAa,CAAC;MAC/D,MAAMiD,OAAO,CAACJ,IAAI,CAAC,CAAC;MACpBxD,iBAAiB,CAAC,EAAE,CAAC;MACrBE,gBAAgB,CAAC,EAAE,CAAC;MACpBqC,OAAO,CAACC,GAAG,CAACoB,OAAO,CAAC;IACtB,CAAC,CAAC,OAAOtB,KAAK,EAAE;MACdI,UAAU,CAAC,MAAM;QACf,IAAIJ,KAAK,CAACmB,OAAO,CAACC,QAAQ,CAAC,qDAAqD,CAAC,EAAE;UACjF5C,qBAAqB,CAAC,wBAAwB,CAAC;QACjD,CAAC,MAAM,IAAIwB,KAAK,CAACmB,OAAO,CAACC,QAAQ,CAAC,qDAAqD,CAAC,EAAE;UACxF5C,qBAAqB,CAAC,uBAAuB,CAAC;QAChD,CAAC,MAAM;UACLyB,OAAO,CAACC,GAAG,CAAC,uBAAuB,EAAEF,KAAK,CAAC;QAC7C;MACF,CAAC,EAAE,IAAI,CAAC;IACV;EACF;EAEA,eAAeuB,oBAAoBA,CAAA,EAAG;IACpC,IAAI;MAEF,IAAI,CAACpE,MAAM,CAACsD,KAAK,CAACC,SAAS,CAACjC,gBAAgB,CAAC,EAAE;QAC7CS,qBAAqB,CAAC,0BAA0B,CAAC;QACjDkB,UAAU,CAAC,MAAM;UACflB,qBAAqB,CAAC,EAAE,CAAC;QAC3B,CAAC,EAAE,IAAI,CAAC;QACR;MACF;MAEA,IAAIP,aAAa,KAAK,EAAE,IAAIE,eAAe,KAAK,EAAE,EAAE;QAClDK,qBAAqB,CAAC,cAAc,CAAC;QACrCkB,UAAU,CAAC,MAAM;UACflB,qBAAqB,CAAC,EAAE,CAAC;QAC3B,CAAC,EAAE,IAAI,CAAC;QACR;MACF;MAEA,IAAIP,aAAa,KAAK,EAAE,EAAE;QACxBO,qBAAqB,CAAC,aAAa,CAAC;QACpCkB,UAAU,CAAC,MAAM;UACflB,qBAAqB,CAAC,EAAE,CAAC;QAC3B,CAAC,EAAE,IAAI,CAAC;QACR;MACF;MAEA,IAAIL,eAAe,KAAK,EAAE,EAAE;QAC1BK,qBAAqB,CAAC,oBAAoB,CAAC;QAC3CkB,UAAU,CAAC,MAAM;UACflB,qBAAqB,CAAC,EAAE,CAAC;QAC3B,CAAC,EAAE,IAAI,CAAC;QACR;MACF;MAEA,MAAM8B,GAAG,GAAG,MAAMjD,cAAc,CAACwD,oBAAoB,CAAC9C,gBAAgB,EAAEE,aAAa,EAAEE,eAAe,CAAC;MACvG,MAAMmC,GAAG,CAACE,IAAI,CAAC,CAAC;MAChBjB,OAAO,CAACC,GAAG,CAACc,GAAG,CAAC;MAEhBjD,cAAc,CAACyD,EAAE,CAAC,gBAAgB,EAAE,MAAM;QACxC5B,kBAAkB,CAAC,CAAC;MACtB,CAAC,CAAC;IACJ,CAAC,CACD,OAAOI,KAAK,EAAE;MACZI,UAAU,CAAC,MAAM;QACf,IAAIJ,KAAK,CAACmB,OAAO,CAACC,QAAQ,CAAC,6CAA6C,CAAC,EAAE;UACzElC,qBAAqB,CAAC,eAAe,CAAC;QACxC,CAAC,MAAM,IAAIc,KAAK,CAACmB,OAAO,CAACC,QAAQ,CAAC,qDAAqD,CAAC,EAAE;UACxFlC,qBAAqB,CAAC,wBAAwB,CAAC;QACjD,CAAC,MAAM;UACLe,OAAO,CAACC,GAAG,CAAC,sBAAsB,EAAEF,KAAK,CAAC;QAC5C;MACF,CAAC,EAAE,IAAI,CAAC;IACV;EACF;EAEA,eAAeG,aAAaA,CAAA,EAAG;IAC7B,IAAIsB,CAAC,GAAG,EAAE;IACV,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG7D,eAAe,EAAE6D,CAAC,EAAE,EAAE;MACxC,IAAIC,SAAS,GAAG,MAAM5D,cAAc,CAAC6D,YAAY,CAACF,CAAC,CAAC;MACpDD,CAAC,CAACI,IAAI,CAACF,SAAS,CAAC;IACnB;IACA3C,aAAa,CAACyC,CAAC,CAAC;EAClB;EAEA,IAAI1C,UAAU,CAAC+C,MAAM,KAAKjE,eAAe,EAAE;IACzCsC,aAAa,CAAC,CAAC;EACjB;;EAGA;;EAEA,oBACEjD,OAAA;IAAK6E,SAAS,EAAC,KAAK;IAAAC,QAAA,gBAClB9E,OAAA;MAAQ+E,EAAE,EAAC,YAAY;MAACC,OAAO,EAAE7B,eAAgB;MAAA2B,QAAA,EAAC;IAAa;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eACxEpF,OAAA;MAAA8E,QAAA,EAAIzE;IAAO;MAAA4E,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAChBpF,OAAA;MAAAiF,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eACNpF,OAAA;MAAOqF,OAAO,EAAC,UAAU;MAAAP,QAAA,EAAC;IAAQ;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAO,CAAC,eAC1CpF,OAAA;MAAO+E,EAAE,EAAC,UAAU;MAACO,KAAK,EAAE/E,cAAe;MACzCgF,QAAQ,EAAGC,KAAK,IAAK;QACnBhF,iBAAiB,CAACgF,KAAK,CAACC,MAAM,CAACH,KAAK,CAAC;MACvC;IAAE;MAAAL,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACPpF,OAAA;MAAQ+E,EAAE,EAAC,aAAa;MAACC,OAAO,EAAE1B,gBAAiB;MAAAwB,QAAA,EAAC;IAAK;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eAClEpF,OAAA;MAAA8E,QAAA,GAAG,WAAS,EAACrE,aAAa;IAAA;MAAAwE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAC/BpF,OAAA;MAAAiF,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eACNpF,OAAA;MAAA8E,QAAA,GAAG,sBAAoB,EAACnE,eAAe;IAAA;MAAAsE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAE5CpF,OAAA;MAAAiF,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eAENpF,OAAA;MAAOqF,OAAO,EAAC,YAAY;MAAAP,QAAA,EAAC;IAA0B;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAO,CAAC,eAC9DpF,OAAA;MAAO+E,EAAE,EAAC,YAAY;MAACO,KAAK,EAAEvE,sBAAuB;MACnDwE,QAAQ,EAAGC,KAAK,IAAK;QACnBxE,yBAAyB,CAACwE,KAAK,CAACC,MAAM,CAACH,KAAK,CAAC;MAC/C;IAAE;MAAAL,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACPpF,OAAA;MAAQ+E,EAAE,EAAC,kBAAkB;MAACC,OAAO,EAAEnB,UAAW;MAAAiB,QAAA,EAAC;IAAG;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eAE/DpF,OAAA;MAAAiF,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eAENpF,OAAA;MAAA8E,QAAA,EAAI7D;IAAoB;MAAAgE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAG7BpF,OAAA;MAAOqF,OAAO,EAAC,eAAe;MAAAP,QAAA,EAAC;IAA0B;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAO,CAAC,eACjEpF,OAAA;MAAO+E,EAAE,EAAC,eAAe;MAACO,KAAK,EAAEnE,aAAc;MAC7CoE,QAAQ,EAAGC,KAAK,IAAK;QACnBpE,gBAAgB,CAACoE,KAAK,CAACC,MAAM,CAACH,KAAK,CAAC;MACtC;IAAE;MAAAL,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACPpF,OAAA;MAAQ+E,EAAE,EAAC,qBAAqB;MAACC,OAAO,EAAEb,aAAc;MAAAW,QAAA,EAAC;IAAO;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eAEzEpF,OAAA;MAAAiF,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eAENpF,OAAA;MAAA8E,QAAA,EAAIzD;IAAkB;MAAA4D,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAE3BpF,OAAA;MAAOqF,OAAO,EAAC,kBAAkB;MAAAP,QAAA,EAAC;IAAyB;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAO,CAAC,eACnEpF,OAAA;MAAO+E,EAAE,EAAC,kBAAkB;MAACO,KAAK,EAAE/D,gBAAiB;MACnDgE,QAAQ,EAAGC,KAAK,IAAK;QACnBhE,mBAAmB,CAACgE,KAAK,CAACC,MAAM,CAACH,KAAK,CAAC;MACzC;IAAE;MAAAL,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACPpF,OAAA;MAAAiF,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eACNpF,OAAA;MAAOqF,OAAO,EAAC,eAAe;MAAAP,QAAA,EAAC;IAAsB;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAO,CAAC,eAC7DpF,OAAA;MAAO+E,EAAE,EAAC,eAAe;MAACO,KAAK,EAAE7D,aAAc;MAC7C8D,QAAQ,EAAGC,KAAK,IAAK;QACnB9D,gBAAgB,CAAC8D,KAAK,CAACC,MAAM,CAACH,KAAK,CAAC;MACtC;IAAE;MAAAL,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACPpF,OAAA;MAAAiF,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eACNpF,OAAA;MAAOqF,OAAO,EAAC,iBAAiB;MAAAP,QAAA,EAAC;IAAwB;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAO,CAAC,eACjEpF,OAAA;MAAO+E,EAAE,EAAC,iBAAiB;MAACO,KAAK,EAAE3D,eAAgB;MACjD4D,QAAQ,EAAGC,KAAK,IAAK;QACnB5D,kBAAkB,CAAC4D,KAAK,CAACC,MAAM,CAACH,KAAK,CAAC;MACxC;IAAE;MAAAL,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACPpF,OAAA;MAAAiF,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eACNpF,OAAA;MAAQ+E,EAAE,EAAC,oBAAoB;MAACC,OAAO,EAAEX,oBAAqB;MAAAS,QAAA,EAAC;IAAsB;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eAC9FpF,OAAA;MAAAiF,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,EACLrD,kBAAkB,EAElBF,UAAU,CAAC6D,GAAG,CAAC,CAACjB,SAAS,EAAEkB,KAAK,KAAK;MACpC,oBAAO3F,OAAA,CAACL,SAAS;QAAC8E,SAAS,EAAEA,SAAU;QAAakB,KAAK,EAAEA;MAAM,GAApBA,KAAK;QAAAV,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAiB,CAAC;IACtE,CAAC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAEC,CAAC;AAEV;;AAEA;AACA;;AAEA;AACA;AACA;AAAAhF,EAAA,CA1RSD,GAAG;AAAAyF,EAAA,GAAHzF,GAAG;AA2RZ,eAAeA,GAAG;AAAC,IAAAyF,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}