{"ast":null,"code":"var _jsxFileName = \"/Users/mukuljindal/Local/projects/fuckingwork/client/src/Components/Candidate.js\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Candidate(props) {\n  _s();\n  const [reasonRevertApproval, setReasonRevertApproval] = useState(\"\");\n  const [reasonRevertVote, setReasonRevertVote] = useState(\"\");\n  async function approveCandidate() {\n    try {\n      let approval = await props.contract.approveCandidate(props.index);\n      await approval.wait();\n      console.log(approval);\n      props.contract.on(\"CandidateAdded\", () => {\n        props.candidatesCountFunction();\n      });\n    } catch (error) {\n      if (error.message.includes(\"reverted with reason string 'You're not an Arbiter'\")) {\n        setReasonRevertApproval(\"You're not an arbiter\");\n      } else if (error.message.includes(\"reverted with reason string 'Already Voted'\")) {\n        setReasonRevertApproval(\"Already Voted\");\n      }\n      console.log(error);\n    }\n  }\n  async function vote() {\n    try {\n      let vote = await props.contract.vote(props.index);\n      await vote.wait();\n      console.log(vote);\n    } catch (error) {\n      if (error.message.includes(\"reverted with reason string 'You've voted'\")) {\n        setReasonRevertVote(\"Already Voted\");\n      } else {\n        console.log(error);\n      }\n    }\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Candidate \", props.index]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Candidate name : \", props.candidate.name]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Candidate symbol : \", props.candidate.symbol]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }, this), props.candidate.approved ? /*#__PURE__*/_jsxDEV(\"button\", {\n      id: `approve${props.index}`,\n      onClick: approveCandidate,\n      children: \"Approve\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n      id: `vote${props.index}`,\n      onClick: vote,\n      children: \"Vote\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: reasonRevertApproval\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: reasonRevertVote\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 9\n  }, this);\n}\n_s(Candidate, \"+drHPh+GhHjNEqhoYS54rF1okq0=\");\n_c = Candidate;\nvar _c;\n$RefreshReg$(_c, \"Candidate\");","map":{"version":3,"names":["useState","jsxDEV","_jsxDEV","Candidate","props","_s","reasonRevertApproval","setReasonRevertApproval","reasonRevertVote","setReasonRevertVote","approveCandidate","approval","contract","index","wait","console","log","on","candidatesCountFunction","error","message","includes","vote","children","fileName","_jsxFileName","lineNumber","columnNumber","candidate","name","symbol","approved","id","onClick","_c","$RefreshReg$"],"sources":["/Users/mukuljindal/Local/projects/fuckingwork/client/src/Components/Candidate.js"],"sourcesContent":["import { useState } from \"react\";\nexport default function Candidate(props) {\n    const [reasonRevertApproval, setReasonRevertApproval] = useState(\"\");\n    const [reasonRevertVote, setReasonRevertVote] = useState(\"\");\n\n    async function approveCandidate() {\n        try {\n            let approval = await props.contract.approveCandidate(props.index);\n            await approval.wait();\n            console.log(approval);\n\n            props.contract.on(\"CandidateAdded\", () => {\n                props.candidatesCountFunction();\n            })\n\n        } catch (error) {\n            if (error.message.includes(\"reverted with reason string 'You're not an Arbiter'\")) {\n                setReasonRevertApproval(\"You're not an arbiter\")\n            } else if (error.message.includes(\"reverted with reason string 'Already Voted'\")) {\n                setReasonRevertApproval(\"Already Voted\")\n            }\n            console.log(error);\n        }\n    }\n\n    async function vote() {\n        try {\n            let vote = await props.contract.vote(props.index);\n            await vote.wait();\n            console.log(vote);\n        } catch (error) {\n            if (error.message.includes(\"reverted with reason string 'You've voted'\")) {\n                setReasonRevertVote(\"Already Voted\")\n            } else {\n                console.log(error);\n            }\n        }\n    }\n    return (\n        <div>\n            <p>Candidate {props.index}</p>\n            <p>Candidate name : {props.candidate.name}</p>\n            <p>Candidate symbol : {props.candidate.symbol}</p>\n            {(props.candidate.approved) ?\n                <button id={`approve${props.index}`} onClick={approveCandidate}>Approve</button> :\n                <button id={`vote${props.index}`} onClick={vote} >Vote</button>\n            }\n            <p>{reasonRevertApproval}</p>\n            <p>{reasonRevertVote}</p>\n        </div>\n    )\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}