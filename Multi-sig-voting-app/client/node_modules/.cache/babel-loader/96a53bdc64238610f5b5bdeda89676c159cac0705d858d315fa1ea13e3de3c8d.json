{"ast":null,"code":"var _jsxFileName = \"/Users/mukuljindal/Local/projects/fuckingwork/client/src/App.js\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from \"react\";\nimport abi from './abi.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ethers = require(\"ethers\");\n\n//contract address : 0x5FbDB2315678afecb367f032d93F642f64180aa3\n\n//add getter functions inside the contract to actually access anything through mappings\n//to access values of a struct in mapping, first return the promise, then use the variable rather than doing simultaneously\n//use ethers@6.7.1 to deploy and use ethers@5.7.2 to run\n\nfunction App() {\n  _s();\n  const [address, setAddress] = useState(\"\");\n  const [arbiterAddress, setArbiterAddress] = useState(\"\");\n  const [arbiterStatus, setArbiterStatus] = useState(\"\");\n  const [candidatesCount, setCandidatesCount] = useState(0);\n  const [provider, setProvider] = useState(null);\n  const [votingContract, setContract] = useState(\"\");\n  async function connect() {\n    if (window.ethereum) {\n      console.log(ethers.version);\n      const provider = new ethers.providers.Web3Provider(window.ethereum);\n      setProvider(provider);\n      const accounts = await window.ethereum.request({\n        method: 'eth_requestAccounts'\n      });\n      console.log('Connected accounts:', accounts);\n      const signer = provider.getSigner(0);\n      const votingContract = new ethers.Contract(\"0x5FbDB2315678afecb367f032d93F642f64180aa3\", abi, signer);\n      setContract(votingContract);\n    }\n  }\n  useEffect(() => {\n    connect();\n  }, []);\n  async function arbitersNum() {\n    const totalArbiters = await votingContract.arbiterCount();\n    const num = totalArbiters.toNumber();\n    return num;\n  }\n  async function candidatesNum() {\n    let totalCan = await votingContract.candidatesCount();\n    let num = totalCan.toNumber();\n    return num;\n  }\n  async function getArbiterCount() {\n    const result = await arbitersNum();\n    setAddress(result);\n    setTimeout(() => {\n      setAddress(\"\");\n    }, 1500);\n  }\n  async function getCandidatesCount() {\n    const result = await candidatesNum();\n    setCandidatesCount(result);\n  }\n  async function getArbiterStatus() {\n    const resultObj = await votingContract.arbiterStatus(arbiterAddress);\n    const result = resultObj.approved;\n    setArbiterStatus(result.toString());\n    setTimeout(() => {\n      setArbiterAddress(\"\");\n      setArbiterStatus(\"\");\n    }, 1500);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      id: \"getAddress\",\n      onClick: getArbiterCount,\n      children: \"Arbiter Count\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: address\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      for: \"arbiter?\",\n      children: \"Arbiter \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      id: \"arbiter?\",\n      value: arbiterAddress,\n      onChange: event => {\n        setArbiterAddress(event.target.value);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      id: \"isAnArbiter\",\n      onClick: getArbiterStatus,\n      children: \"Check\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Status : \", arbiterStatus]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"No. of candidates : \", candidatesCount]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      id: \"candidatesCount\",\n      onClick: getCandidatesCount,\n      children: \"Check\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 78,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"KWgKIbc9duTAdx4w25CHzTEtfeM=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useState","useEffect","abi","jsxDEV","_jsxDEV","ethers","require","App","_s","address","setAddress","arbiterAddress","setArbiterAddress","arbiterStatus","setArbiterStatus","candidatesCount","setCandidatesCount","provider","setProvider","votingContract","setContract","connect","window","ethereum","console","log","version","providers","Web3Provider","accounts","request","method","signer","getSigner","Contract","arbitersNum","totalArbiters","arbiterCount","num","toNumber","candidatesNum","totalCan","getArbiterCount","result","setTimeout","getCandidatesCount","getArbiterStatus","resultObj","approved","toString","className","children","id","onClick","fileName","_jsxFileName","lineNumber","columnNumber","for","value","onChange","event","target","_c","$RefreshReg$"],"sources":["/Users/mukuljindal/Local/projects/fuckingwork/client/src/App.js"],"sourcesContent":["import { useState, useEffect } from \"react\";\nimport abi from './abi.js';\nconst ethers = require(\"ethers\");\n\n//contract address : 0x5FbDB2315678afecb367f032d93F642f64180aa3\n\n\n//add getter functions inside the contract to actually access anything through mappings\n//to access values of a struct in mapping, first return the promise, then use the variable rather than doing simultaneously\n//use ethers@6.7.1 to deploy and use ethers@5.7.2 to run\n\nfunction App() {\n\n  const [address, setAddress] = useState(\"\");\n  const [arbiterAddress, setArbiterAddress] = useState(\"\");\n  const [arbiterStatus, setArbiterStatus] = useState(\"\");\n  const [candidatesCount, setCandidatesCount] = useState(0);\n  const [provider, setProvider] = useState(null);\n  const [votingContract, setContract] = useState(\"\");\n\n  async function connect() {\n    if (window.ethereum) {\n      console.log(ethers.version);\n      const provider = new ethers.providers.Web3Provider(window.ethereum);\n      setProvider(provider);\n\n      const accounts = await window.ethereum.request({ method: 'eth_requestAccounts' });\n      console.log('Connected accounts:', accounts);\n      const signer = provider.getSigner(0);\n\n      const votingContract = new ethers.Contract(\"0x5FbDB2315678afecb367f032d93F642f64180aa3\", abi, signer);\n      setContract(votingContract);\n\n    }\n  }\n\n  useEffect(() => {\n    connect();\n  }, []);\n\n  async function arbitersNum() {\n    const totalArbiters = await votingContract.arbiterCount();\n    const num = totalArbiters.toNumber();\n    return num;\n  }\n\n  async function candidatesNum() {\n    let totalCan = await votingContract.candidatesCount();\n    let num = totalCan.toNumber();\n    return num;\n  }\n\n  async function getArbiterCount() {\n    const result = await arbitersNum()\n    setAddress(result);\n    setTimeout(() => {\n      setAddress(\"\");\n    }, 1500);\n\n  }\n\n  async function getCandidatesCount() {\n    const result = await candidatesNum()\n    setCandidatesCount(result);\n  }\n\n  async function getArbiterStatus() {\n    const resultObj = await votingContract.arbiterStatus(arbiterAddress);\n    const result = resultObj.approved;\n    setArbiterStatus(result.toString());\n    setTimeout(() => {\n      setArbiterAddress(\"\");\n      setArbiterStatus(\"\");\n    }, 1500);\n  }\n\n  return (\n    <div className=\"App\">\n      <button id=\"getAddress\" onClick={getArbiterCount}>Arbiter Count</button>\n      <p>{address}</p>\n      <br />\n      <label for='arbiter?'>Arbiter </label>\n      <input id='arbiter?' value={arbiterAddress}\n        onChange={(event) => {\n          setArbiterAddress(event.target.value)\n        }} />\n      <button id='isAnArbiter' onClick={getArbiterStatus}>Check</button>\n      <p>Status : {arbiterStatus}</p>\n      <br />\n      <p>No. of candidates : {candidatesCount}</p>\n      <button id='candidatesCount' onClick={getCandidatesCount}>Check</button>\n\n    </div>\n  );\n}\n\nexport default App;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}