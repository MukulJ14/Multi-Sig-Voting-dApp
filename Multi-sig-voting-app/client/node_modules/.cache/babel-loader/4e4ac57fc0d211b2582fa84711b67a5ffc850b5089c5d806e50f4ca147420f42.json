{"ast":null,"code":"var _jsxFileName = \"/Users/mukuljindal/Local/projects/fuckingwork/client/src/App.js\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from \"react\";\nimport abi from './abi.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ethers = require(\"ethers\");\n\n//contract address : 0x5FbDB2315678afecb367f032d93F642f64180aa3\n\n//add getter functions inside the contract to actually access anything through mappings\n//to access values of a struct in mapping, first return the promise, then use the variable rather than doing simultaneously\n//use ethers@6.7.1 to deploy and use ethers@5.7.2 to run\n//if there's an rpc error, cleat activity logs on metamask->settings->advanced->clear\n\nfunction App() {\n  _s();\n  const [address, setAddress] = useState(\"\");\n  const [arbiterAddress, setArbiterAddress] = useState(\"\");\n  const [arbiterStatus, setArbiterStatus] = useState(\"\");\n  const [candidatesCount, setCandidatesCount] = useState(0);\n  const [provider, setProvider] = useState(null);\n  const [votingContract, setContract] = useState(\"\");\n  const [arbiterApprovalAddress, setArbiterApprovalAddress] = useState(\"\");\n  async function connect() {\n    if (window.ethereum) {\n      const provider = new ethers.providers.Web3Provider(window.ethereum);\n      setProvider(provider);\n      const accounts = await window.ethereum.request({\n        method: 'eth_requestAccounts'\n      });\n      //console.log('Connected accounts:', accounts);\n      const signer = provider.getSigner(0);\n      const votingContract = new ethers.Contract(\"0x5FbDB2315678afecb367f032d93F642f64180aa3\", abi, signer);\n      setContract(votingContract);\n    }\n  }\n  useEffect(() => {\n    connect();\n  }, []);\n  async function arbitersNum() {\n    const totalArbiters = await votingContract.arbiterCount();\n    const num = totalArbiters.toNumber();\n    return num;\n  }\n  async function candidatesNum() {\n    let totalCan = await votingContract.candidatesCount();\n    let num = totalCan.toNumber();\n    return num;\n  }\n  async function getArbiterCount() {\n    const result = await arbitersNum();\n    setAddress(result);\n    setTimeout(() => {\n      setAddress(\"\");\n    }, 1500);\n  }\n  async function getCandidatesCount() {\n    const result = await candidatesNum();\n    setCandidatesCount(result);\n  }\n  async function getArbiterStatus() {\n    const resultObj = await votingContract.arbiterStatus(arbiterAddress);\n    const result = resultObj.approved;\n    setArbiterStatus(result.toString());\n    setTimeout(() => {\n      setArbiterAddress(\"\");\n      setArbiterStatus(\"\");\n    }, 1500);\n  }\n  async function approveArbiter() {\n    let approval = await votingContract.approveArbiter(arbiterApprovalAddress);\n    await approval.wait();\n    console.log(approval);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      id: \"getAddress\",\n      onClick: getArbiterCount,\n      children: \"Arbiter Count\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: address\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: \"arbiter?\",\n      children: \"Arbiter \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      id: \"arbiter?\",\n      value: arbiterAddress,\n      onChange: event => {\n        setArbiterAddress(event.target.value);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      id: \"isAnArbiter\",\n      onClick: getArbiterStatus,\n      children: \"Check\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Status : \", arbiterStatus]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"No. of candidates : \", candidatesCount]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      id: \"candidatesCount\",\n      onClick: getCandidatesCount,\n      children: \"Check\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: \"approveArbiter\",\n      children: \"Enter arbiter for approval :\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      id: \"approveArbiter\",\n      value: arbiterApprovalAddress,\n      onChange: event => {\n        setArbiterApprovalAddress(event.target.value);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      id: \"approve\",\n      onClick: approveArbiter,\n      children: \"Approve\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 85,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"bBg6T+/Ku3MXFvuC1nEGtVuUmEg=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useState","useEffect","abi","jsxDEV","_jsxDEV","ethers","require","App","_s","address","setAddress","arbiterAddress","setArbiterAddress","arbiterStatus","setArbiterStatus","candidatesCount","setCandidatesCount","provider","setProvider","votingContract","setContract","arbiterApprovalAddress","setArbiterApprovalAddress","connect","window","ethereum","providers","Web3Provider","accounts","request","method","signer","getSigner","Contract","arbitersNum","totalArbiters","arbiterCount","num","toNumber","candidatesNum","totalCan","getArbiterCount","result","setTimeout","getCandidatesCount","getArbiterStatus","resultObj","approved","toString","approveArbiter","approval","wait","console","log","className","children","id","onClick","fileName","_jsxFileName","lineNumber","columnNumber","htmlFor","value","onChange","event","target","_c","$RefreshReg$"],"sources":["/Users/mukuljindal/Local/projects/fuckingwork/client/src/App.js"],"sourcesContent":["import { useState, useEffect } from \"react\";\nimport abi from './abi.js';\nconst ethers = require(\"ethers\");\n\n//contract address : 0x5FbDB2315678afecb367f032d93F642f64180aa3\n\n\n//add getter functions inside the contract to actually access anything through mappings\n//to access values of a struct in mapping, first return the promise, then use the variable rather than doing simultaneously\n//use ethers@6.7.1 to deploy and use ethers@5.7.2 to run\n//if there's an rpc error, cleat activity logs on metamask->settings->advanced->clear\n\nfunction App() {\n\n  const [address, setAddress] = useState(\"\");\n  const [arbiterAddress, setArbiterAddress] = useState(\"\");\n  const [arbiterStatus, setArbiterStatus] = useState(\"\");\n  const [candidatesCount, setCandidatesCount] = useState(0);\n  const [provider, setProvider] = useState(null);\n  const [votingContract, setContract] = useState(\"\");\n  const [arbiterApprovalAddress, setArbiterApprovalAddress] = useState(\"\");\n\n  async function connect() {\n    if (window.ethereum) {\n      const provider = new ethers.providers.Web3Provider(window.ethereum);\n      setProvider(provider);\n\n      const accounts = await window.ethereum.request({ method: 'eth_requestAccounts' });\n      //console.log('Connected accounts:', accounts);\n      const signer = provider.getSigner(0);\n\n      const votingContract = new ethers.Contract(\"0x5FbDB2315678afecb367f032d93F642f64180aa3\", abi, signer);\n      setContract(votingContract);\n\n    }\n  }\n\n  useEffect(() => {\n    connect();\n  }, []);\n\n  async function arbitersNum() {\n    const totalArbiters = await votingContract.arbiterCount();\n    const num = totalArbiters.toNumber();\n    return num;\n  }\n\n  async function candidatesNum() {\n    let totalCan = await votingContract.candidatesCount();\n    let num = totalCan.toNumber();\n    return num;\n  }\n\n  async function getArbiterCount() {\n    const result = await arbitersNum()\n    setAddress(result);\n    setTimeout(() => {\n      setAddress(\"\");\n    }, 1500);\n\n  }\n\n  async function getCandidatesCount() {\n    const result = await candidatesNum()\n    setCandidatesCount(result);\n  }\n\n  async function getArbiterStatus() {\n    const resultObj = await votingContract.arbiterStatus(arbiterAddress);\n    const result = resultObj.approved;\n    setArbiterStatus(result.toString());\n    setTimeout(() => {\n      setArbiterAddress(\"\");\n      setArbiterStatus(\"\");\n    }, 1500);\n  }\n\n  async function approveArbiter() {\n    let approval = await votingContract.approveArbiter(arbiterApprovalAddress);\n    await approval.wait();\n    console.log(approval);\n  }\n\n  return (\n    <div className=\"App\">\n      <button id=\"getAddress\" onClick={getArbiterCount}>Arbiter Count</button>\n      <p>{address}</p>\n      <br />\n      <label htmlFor='arbiter?'>Arbiter </label>\n      <input id='arbiter?' value={arbiterAddress}\n        onChange={(event) => {\n          setArbiterAddress(event.target.value)\n        }} />\n      <button id='isAnArbiter' onClick={getArbiterStatus}>Check</button>\n      <p>Status : {arbiterStatus}</p>\n      <br />\n      <p>No. of candidates : {candidatesCount}</p>\n      <button id='candidatesCount' onClick={getCandidatesCount}>Check</button>\n\n      <br />\n      <label htmlFor=\"approveArbiter\">Enter arbiter for approval :</label>\n      <input id='approveArbiter' value={arbiterApprovalAddress}\n        onChange={(event) => {\n          setArbiterApprovalAddress(event.target.value)\n        }} />\n      <button id=\"approve\" onClick={approveArbiter}>Approve</button>\n\n    </div>\n  );\n}\n\nexport default App;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}