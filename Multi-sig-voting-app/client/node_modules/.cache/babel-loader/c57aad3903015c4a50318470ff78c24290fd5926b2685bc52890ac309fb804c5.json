{"ast":null,"code":"\"use strict\";\n\n// Based on: https://github.com/notenoughneon/await-semaphore/blob/f117a6b59324038c9e8ee04c70c328215a727812/index.ts\n// which is distributed under this license: https://github.com/notenoughneon/await-semaphore/blob/f117a6b59324038c9e8ee04c70c328215a727812/LICENSE\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Mutex = exports.Semaphore = void 0;\n/* eslint-disable @nomicfoundation/hardhat-internal-rules/only-hardhat-error */\nclass Semaphore {\n  constructor(count) {\n    this._tasks = [];\n    this.count = count;\n  }\n  acquire() {\n    return new Promise(res => {\n      const task = () => {\n        let released = false;\n        res(() => {\n          if (!released) {\n            released = true;\n            this.count++;\n            this._sched();\n          }\n        });\n      };\n      this._tasks.push(task);\n      if (process !== undefined && process.nextTick !== undefined) {\n        process.nextTick(this._sched.bind(this));\n      } else {\n        setImmediate(this._sched.bind(this));\n      }\n    });\n  }\n  use(f) {\n    return this.acquire().then(release => {\n      return f().then(res => {\n        release();\n        return res;\n      }).catch(err => {\n        release();\n        throw err;\n      });\n    });\n  }\n  _sched() {\n    if (this.count > 0 && this._tasks.length > 0) {\n      this.count--;\n      const next = this._tasks.shift();\n      if (next === undefined) {\n        throw new Error(\"Unexpected undefined value in tasks list\");\n      }\n      next();\n    }\n  }\n}\nexports.Semaphore = Semaphore;\nclass Mutex extends Semaphore {\n  constructor() {\n    super(1);\n  }\n}\nexports.Mutex = Mutex;","map":{"version":3,"names":["Semaphore","constructor","count","_tasks","acquire","Promise","res","task","released","_sched","push","process","undefined","nextTick","bind","setImmediate","use","f","then","release","catch","err","length","next","shift","Error","exports","Mutex"],"sources":["/Users/mukuljindal/Local/projects/fuckingwork/node_modules/hardhat/src/internal/vendor/await-semaphore/index.ts"],"sourcesContent":["// Based on: https://github.com/notenoughneon/await-semaphore/blob/f117a6b59324038c9e8ee04c70c328215a727812/index.ts\n// which is distributed under this license: https://github.com/notenoughneon/await-semaphore/blob/f117a6b59324038c9e8ee04c70c328215a727812/LICENSE\n\n/* eslint-disable @nomicfoundation/hardhat-internal-rules/only-hardhat-error */\n\nexport class Semaphore {\n  public count: number;\n  private _tasks: Array<() => void> = [];\n\n  constructor(count: number) {\n    this.count = count;\n  }\n\n  public acquire() {\n    return new Promise<() => void>((res) => {\n      const task = () => {\n        let released = false;\n        res(() => {\n          if (!released) {\n            released = true;\n            this.count++;\n            this._sched();\n          }\n        });\n      };\n      this._tasks.push(task);\n      if (process !== undefined && process.nextTick !== undefined) {\n        process.nextTick(this._sched.bind(this));\n      } else {\n        setImmediate(this._sched.bind(this));\n      }\n    });\n  }\n\n  public use<T>(f: () => Promise<T>) {\n    return this.acquire().then((release) => {\n      return f()\n        .then((res) => {\n          release();\n          return res;\n        })\n        .catch((err) => {\n          release();\n          throw err;\n        });\n    });\n  }\n\n  private _sched() {\n    if (this.count > 0 && this._tasks.length > 0) {\n      this.count--;\n      const next = this._tasks.shift();\n      if (next === undefined) {\n        throw new Error(\"Unexpected undefined value in tasks list\");\n      }\n\n      next();\n    }\n  }\n}\n\nexport class Mutex extends Semaphore {\n  constructor() {\n    super(1);\n  }\n}\n"],"mappings":";;AAAA;AACA;;;;;AAEA;AAEA,MAAaA,SAAS;EAIpBC,YAAYC,KAAa;IAFjB,KAAAC,MAAM,GAAsB,EAAE;IAGpC,IAAI,CAACD,KAAK,GAAGA,KAAK;EACpB;EAEOE,OAAOA,CAAA;IACZ,OAAO,IAAIC,OAAO,CAAcC,GAAG,IAAI;MACrC,MAAMC,IAAI,GAAGA,CAAA,KAAK;QAChB,IAAIC,QAAQ,GAAG,KAAK;QACpBF,GAAG,CAAC,MAAK;UACP,IAAI,CAACE,QAAQ,EAAE;YACbA,QAAQ,GAAG,IAAI;YACf,IAAI,CAACN,KAAK,EAAE;YACZ,IAAI,CAACO,MAAM,EAAE;;QAEjB,CAAC,CAAC;MACJ,CAAC;MACD,IAAI,CAACN,MAAM,CAACO,IAAI,CAACH,IAAI,CAAC;MACtB,IAAII,OAAO,KAAKC,SAAS,IAAID,OAAO,CAACE,QAAQ,KAAKD,SAAS,EAAE;QAC3DD,OAAO,CAACE,QAAQ,CAAC,IAAI,CAACJ,MAAM,CAACK,IAAI,CAAC,IAAI,CAAC,CAAC;OACzC,MAAM;QACLC,YAAY,CAAC,IAAI,CAACN,MAAM,CAACK,IAAI,CAAC,IAAI,CAAC,CAAC;;IAExC,CAAC,CAAC;EACJ;EAEOE,GAAGA,CAAIC,CAAmB;IAC/B,OAAO,IAAI,CAACb,OAAO,EAAE,CAACc,IAAI,CAAEC,OAAO,IAAI;MACrC,OAAOF,CAAC,EAAE,CACPC,IAAI,CAAEZ,GAAG,IAAI;QACZa,OAAO,EAAE;QACT,OAAOb,GAAG;MACZ,CAAC,CAAC,CACDc,KAAK,CAAEC,GAAG,IAAI;QACbF,OAAO,EAAE;QACT,MAAME,GAAG;MACX,CAAC,CAAC;IACN,CAAC,CAAC;EACJ;EAEQZ,MAAMA,CAAA;IACZ,IAAI,IAAI,CAACP,KAAK,GAAG,CAAC,IAAI,IAAI,CAACC,MAAM,CAACmB,MAAM,GAAG,CAAC,EAAE;MAC5C,IAAI,CAACpB,KAAK,EAAE;MACZ,MAAMqB,IAAI,GAAG,IAAI,CAACpB,MAAM,CAACqB,KAAK,EAAE;MAChC,IAAID,IAAI,KAAKX,SAAS,EAAE;QACtB,MAAM,IAAIa,KAAK,CAAC,0CAA0C,CAAC;;MAG7DF,IAAI,EAAE;;EAEV;;AArDFG,OAAA,CAAA1B,SAAA,GAAAA,SAAA;AAwDA,MAAa2B,KAAM,SAAQ3B,SAAS;EAClCC,YAAA;IACE,KAAK,CAAC,CAAC,CAAC;EACV;;AAHFyB,OAAA,CAAAC,KAAA,GAAAA,KAAA"},"metadata":{},"sourceType":"script","externalDependencies":[]}