{"ast":null,"code":"var _jsxFileName = \"/Users/mukuljindal/Local/projects/voting/client/src/App.js\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from \"react\";\nimport abi from './abi.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ethers = require(\"ethers\");\nconst hre = require(\"hardhat\");\n\n//add getter functions inside the contract to actually access anything through mappings\n//to access values of a struct in mapping, first return the promise, then use the variable rather than doing simultaneously\n\nconst provider = new hre.ethers.providers.Web3Provider(window.ethereum);\n//contract address : 0x5FbDB2315678afecb367f032d93F642f64180aa3\n\nconst votingContract = new ethers.Contract(\"0x5FbDB2315678afecb367f032d93F642f64180aa3\", abi, provider);\nasync function arbitersNum() {\n  const totalArbiters = await votingContract.arbiterCount();\n  const num = totalArbiters.toNumber();\n  return num;\n}\nasync function candidatesNum() {\n  let totalCan = await votingContract.candidatesCount();\n  let num = totalCan.toNumber();\n  return num;\n}\nfunction App() {\n  _s();\n  const [address, setAddress] = useState(\"\");\n  const [arbiterAddress, setArbiterAddress] = useState(\"\");\n  const [arbiterStatus, setArbiterStatus] = useState(\"\");\n  const [candidates, setCandidates] = useState(0);\n\n  // useEffect(() => {\n  //   let result = votingContract.candidatesCount();\n  //   let num = result.toNumber();\n  //   setCandidates(num);\n  // }, []);\n\n  async function getArbiterCount() {\n    const result = await arbitersNum();\n    setAddress(result);\n    setTimeout(() => {\n      setAddress(\"\");\n    }, 1500);\n  }\n  async function getCandidatesCount() {\n    const result = await candidatesNum();\n    setAddress(result);\n  }\n  async function getArbiterStatus() {\n    const resultObj = await votingContract.arbiterStatus(arbiterAddress);\n    const result = resultObj.approved;\n    setArbiterStatus(result.toString());\n    setTimeout(() => {\n      setArbiterAddress(\"\");\n      setArbiterStatus(\"\");\n    }, 1500);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      id: \"getAddress\",\n      onClick: getArbiterCount,\n      children: \"Arbiter Count\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: address\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      for: \"arbiter?\",\n      children: \"Arbiter \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      id: \"arbiter?\",\n      value: arbiterAddress,\n      onChange: event => {\n        setArbiterAddress(event.target.value);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      id: \"isAnArbiter\",\n      onClick: getArbiterStatus,\n      children: \"Check\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Status : \", arbiterStatus]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"No. of candidates : \", candidates]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      id: \"candidatesCount\",\n      onClick: getCandidatesCount,\n      children: \"Check\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"JXawr35PdMudLdTxVv6hvB+Tb6k=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useState","useEffect","abi","jsxDEV","_jsxDEV","ethers","require","hre","provider","providers","Web3Provider","window","ethereum","votingContract","Contract","arbitersNum","totalArbiters","arbiterCount","num","toNumber","candidatesNum","totalCan","candidatesCount","App","_s","address","setAddress","arbiterAddress","setArbiterAddress","arbiterStatus","setArbiterStatus","candidates","setCandidates","getArbiterCount","result","setTimeout","getCandidatesCount","getArbiterStatus","resultObj","approved","toString","className","children","id","onClick","fileName","_jsxFileName","lineNumber","columnNumber","for","value","onChange","event","target","_c","$RefreshReg$"],"sources":["/Users/mukuljindal/Local/projects/voting/client/src/App.js"],"sourcesContent":["import { useState, useEffect } from \"react\";\nimport abi from './abi.js';\nconst ethers = require(\"ethers\");\nconst hre = require(\"hardhat\");\n\n\n\n//add getter functions inside the contract to actually access anything through mappings\n//to access values of a struct in mapping, first return the promise, then use the variable rather than doing simultaneously\n\nconst provider = new hre.ethers.providers.Web3Provider(window.ethereum);\n//contract address : 0x5FbDB2315678afecb367f032d93F642f64180aa3\n\nconst votingContract = new ethers.Contract(\"0x5FbDB2315678afecb367f032d93F642f64180aa3\", abi, provider);\n\nasync function arbitersNum() {\n  const totalArbiters = await votingContract.arbiterCount();\n  const num = totalArbiters.toNumber();\n  return num;\n}\n\nasync function candidatesNum() {\n  let totalCan = await votingContract.candidatesCount();\n  let num = totalCan.toNumber();\n  return num;\n}\n\nfunction App() {\n  const [address, setAddress] = useState(\"\");\n  const [arbiterAddress, setArbiterAddress] = useState(\"\");\n  const [arbiterStatus, setArbiterStatus] = useState(\"\");\n  const [candidates, setCandidates] = useState(0);\n\n  // useEffect(() => {\n  //   let result = votingContract.candidatesCount();\n  //   let num = result.toNumber();\n  //   setCandidates(num);\n  // }, []);\n\n  async function getArbiterCount() {\n    const result = await arbitersNum()\n    setAddress(result);\n    setTimeout(() => {\n      setAddress(\"\");\n    }, 1500);\n\n  }\n\n  async function getCandidatesCount() {\n    const result = await candidatesNum()\n    setAddress(result);\n  }\n\n  async function getArbiterStatus() {\n    const resultObj = await votingContract.arbiterStatus(arbiterAddress);\n    const result = resultObj.approved;\n    setArbiterStatus(result.toString());\n    setTimeout(() => {\n      setArbiterAddress(\"\");\n      setArbiterStatus(\"\");\n    }, 1500);\n  }\n\n  return (\n    <div className=\"App\">\n      <button id=\"getAddress\" onClick={getArbiterCount}>Arbiter Count</button>\n      <p>{address}</p>\n      <br />\n      <label for='arbiter?'>Arbiter </label>\n      <input id='arbiter?' value={arbiterAddress}\n        onChange={(event) => {\n          setArbiterAddress(event.target.value)\n        }} />\n      <button id='isAnArbiter' onClick={getArbiterStatus}>Check</button>\n      <p>Status : {arbiterStatus}</p>\n      <br />\n      <p>No. of candidates : {candidates}</p>\n      <button id='candidatesCount' onClick={getCandidatesCount}>Check</button>\n\n    </div>\n  );\n}\n\nexport default App;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}