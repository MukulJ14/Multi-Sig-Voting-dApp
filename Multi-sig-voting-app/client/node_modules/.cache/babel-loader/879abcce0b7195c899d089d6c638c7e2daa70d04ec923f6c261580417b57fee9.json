{"ast":null,"code":"var _jsxFileName = \"/Users/mukuljindal/Local/projects/fuckingwork/client/src/App.js\",\n  _s = $RefreshSig$();\nimport Candidate from \"./Components/Candidate.js\";\nimport Arbiter from \"./Components/Arbiter.js\";\nimport { useState, useEffect } from \"react\";\nimport abi from './abi.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ethers = require(\"ethers\");\n\n//contract address : 0x5FbDB2315678afecb367f032d93F642f64180aa3\n\n//add getter functions inside the contract to actually access anything through mappings\n//to access values of a struct in mapping, first return the promise, then use the variable rather than doing simultaneously\n//use ethers@6.7.1 to deploy and use ethers@5.7.2 to run\n//if there's an rpc error, cleat activity logs on metamask->settings->advanced->clear\n\nfunction App() {\n  _s();\n  const [arbiterCount, setArbiterCount] = useState(0);\n  const [arbiterAddress, setArbiterAddress] = useState(\"\");\n  const [arbiterStatus, setArbiterStatus] = useState(\"\");\n  const [candidatesCount, setCandidatesCount] = useState(0);\n  const [votingContract, setContract] = useState(\"\");\n  const [arbiterApprovalAddress, setArbiterApprovalAddress] = useState(\"\");\n  const [reasonRevertApproval, setReasonRevertApproval] = useState(\"\");\n  const [arbiterDelete, setArbiterDelete] = useState(\"\");\n  const [reasonRevertDelete, setReasonRevertDelete] = useState(\"\");\n  const [candidateAddress, setCandidateAddress] = useState(\"\");\n  const [candidateName, setCandidateName] = useState(\"\");\n  const [candidateSymbol, setCandidateSymbol] = useState(\"\");\n  let [candidates, setCandidates] = useState([]);\n  let [arbiters, setArbiters] = useState([]);\n  const [reasonRevertCanAdd, setReasonRevertCanAdd] = useState(\"\");\n  async function connect() {\n    if (window.ethereum) {\n      const provider = new ethers.providers.Web3Provider(window.ethereum);\n\n      // const accounts = await window.ethereum.request({ method: 'eth_requestAccounts' });\n      // console.log('Connected accounts:', accounts);\n      const signer = provider.getSigner(0);\n      const votingContract = new ethers.Contract(\"0x5FbDB2315678afecb367f032d93F642f64180aa3\", abi, signer);\n      setContract(votingContract);\n    }\n  }\n  async function getCandidatesCount() {\n    try {\n      let totalCan = await votingContract.getCandidateCount();\n      let num = totalCan.toNumber();\n      setCandidatesCount(num);\n    } catch (error) {\n      console.log(error);\n    }\n  }\n  async function getArbiterCount() {\n    const totalArbiters = await votingContract.getArbiterCount();\n    const num = totalArbiters.toNumber();\n    setArbiterCount(num);\n  }\n  useEffect(() => {\n    connect();\n    getCandidates();\n    getArbiters();\n  }, []);\n  setTimeout(() => {\n    getCandidatesCount();\n    getArbiterCount();\n  }, 500);\n  async function getArbiters() {\n    let c = [];\n    for (let i = 0; i < arbiterCount; i++) {\n      let arbiter = await votingContract.getArbiterStatus(i);\n      c.push(arbiter);\n    }\n    console.log(c);\n    setArbiters(c);\n  }\n  if (candidates.length !== candidatesCount) {\n    getCandidates();\n  }\n  if (arbiters.length !== arbiterCount) {\n    getArbiters();\n  }\n  async function getArbiterStatus() {\n    if (!ethers.utils.isAddress(arbiterAddress)) {\n      setArbiterStatus(\"Invalid Ethereum Address\");\n      setTimeout(() => {\n        setArbiterStatus(\"\");\n      }, 1600);\n      return;\n    }\n    const resultObj = await votingContract.getArbiterStatus(arbiterAddress);\n    const result = resultObj.approved;\n    setArbiterStatus(result.toString());\n    setTimeout(() => {\n      setArbiterAddress(\"\");\n      setArbiterStatus(\"\");\n    }, 1600);\n  }\n  async function addArbiter() {\n    try {\n      if (!ethers.utils.isAddress(arbiterApprovalAddress)) {\n        setReasonRevertApproval(\"Invalid Ethereum Address\");\n        setTimeout(() => {\n          setReasonRevertApproval(\"\");\n        }, 1600);\n        return;\n      }\n      let add = await votingContract.addAndApproveArbiter(arbiterApprovalAddress);\n      await add.wait();\n      console.log(add);\n    } catch (error) {\n      setTimeout(() => {\n        if (error.message.includes(\"reverted with reason string 'You're not an Arbiter'\")) {\n          setReasonRevertApproval(\"Already Voted\");\n        } else if (error.message.includes(\"reverted with reason string 'Already Voted'\")) {\n          setReasonRevertApproval(\"Already Voted\");\n        } else {\n          console.log(\"Approve Arbiter Error:\", error);\n        }\n      }, 1600);\n    }\n  }\n  async function deleteArbiter() {\n    try {\n      if (!ethers.utils.isAddress(arbiterDelete)) {\n        setReasonRevertDelete(\"Invalid Ethereum Address\");\n        setTimeout(() => {\n          setReasonRevertDelete(\"\");\n        }, 1600);\n        return;\n      }\n      let deleted = await votingContract.deleteArbiter(arbiterDelete);\n      await deleted.wait();\n      setArbiterAddress(\"\");\n      setArbiterStatus(\"\");\n      console.log(deleted);\n    } catch (error) {\n      setTimeout(() => {\n        if (error.message.includes(\"reverted with reason string 'That's not an Arbiter'\")) {\n          setReasonRevertDelete(\"Address not an arbiter\");\n        } else if (error.message.includes(\"reverted with reason string 'You're not an Arbiter'\")) {\n          setReasonRevertDelete(\"You're not an arbiter\");\n        } else {\n          console.log(\"Delete Arbiter Error:\", error);\n        }\n      }, 1600);\n    }\n  }\n  async function addCandidateProposal() {\n    try {\n      if (!ethers.utils.isAddress(candidateAddress)) {\n        setReasonRevertCanAdd(\"Invalid Ethereum Address\");\n        setTimeout(() => {\n          setReasonRevertCanAdd(\"\");\n        }, 1600);\n        return;\n      }\n      if (candidateName === \"\" && candidateSymbol === \"\") {\n        setReasonRevertCanAdd(\"Empty Inputs\");\n        setTimeout(() => {\n          setReasonRevertCanAdd(\"\");\n        }, 1600);\n        return;\n      }\n      if (candidateName === \"\") {\n        setReasonRevertCanAdd(\"Empty Input\");\n        setTimeout(() => {\n          setReasonRevertCanAdd(\"\");\n        }, 1600);\n        return;\n      }\n      if (candidateSymbol === \"\") {\n        setReasonRevertCanAdd(\"Empty Input Symbol\");\n        setTimeout(() => {\n          setReasonRevertCanAdd(\"\");\n        }, 1600);\n        return;\n      }\n      const add = await votingContract.addCandidateProposal(candidateAddress, candidateName, candidateSymbol);\n      await add.wait();\n      console.log(add);\n      votingContract.on(\"CandidateAdded\", () => {\n        getCandidatesCount();\n      });\n    } catch (error) {\n      setTimeout(() => {\n        if (error.message.includes(\"reverted with reason string 'Already Voted'\")) {\n          setReasonRevertCanAdd(\"Already Voted\");\n        } else if (error.message.includes(\"reverted with reason string 'You're not an Arbiter'\")) {\n          setReasonRevertCanAdd(\"You're not an  Arbiter\");\n        } else {\n          console.log(\"Candidate Add Error:\", error);\n        }\n      }, 1600);\n    }\n  }\n  async function getCandidates() {\n    let c = [];\n    for (let i = 0; i < candidatesCount; i++) {\n      let candidate = await votingContract.getCandidate(i);\n      c.push(candidate);\n    }\n    setCandidates(c);\n  }\n  if (candidates.length !== candidatesCount) {\n    getCandidates();\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Arbiter Count : \", arbiterCount]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 239,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 240,\n      columnNumber: 7\n    }, this), arbiters.map((arbiter, index) => {\n      return /*#__PURE__*/_jsxDEV(Arbiter, {\n        arbiter: arbiter,\n        index: index,\n        contract: votingContract,\n        arbiterCountFunction: getArbiterCount\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 242,\n        columnNumber: 16\n      }, this);\n    }), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 245,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: \"arbiter?\",\n      children: \"Arbiter \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 246,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      id: \"arbiter?\",\n      value: arbiterAddress,\n      onChange: event => {\n        setArbiterAddress(event.target.value);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 247,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      id: \"isAnArbiter\",\n      onClick: getArbiterStatus,\n      children: \"Check\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 251,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Status : \", arbiterStatus]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 252,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 253,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"No. of candidates : \", candidatesCount]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 254,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 256,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: \"addArbiter\",\n      children: \"Enter arbiter for adding :\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 258,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      id: \"addArbiter\",\n      value: arbiterApprovalAddress,\n      onChange: event => {\n        setArbiterApprovalAddress(event.target.value);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 259,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      id: \"addArbiterButton\",\n      onClick: addArbiter,\n      children: \"Add\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 263,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 265,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: reasonRevertApproval\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 267,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: \"deleteArbiter\",\n      children: \"Enter arbiter for delete :\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 270,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      id: \"deleteArbiter\",\n      value: arbiterDelete,\n      onChange: event => {\n        setArbiterDelete(event.target.value);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 271,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      id: \"deleteArbiterButton\",\n      onClick: deleteArbiter,\n      children: \"Approve\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 275,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 277,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: reasonRevertDelete\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 279,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: \"candidateAddress\",\n      children: \"Enter candidate Address :\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 281,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      id: \"candidateAddress\",\n      value: candidateAddress,\n      onChange: event => {\n        setCandidateAddress(event.target.value);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 282,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 286,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: \"candidateName\",\n      children: \"Enter candidate Name :\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 287,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      id: \"candidateName\",\n      value: candidateName,\n      onChange: event => {\n        setCandidateName(event.target.value);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 288,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 292,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: \"candidateSymbol\",\n      children: \"Enter candidate Symbol :\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 293,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      id: \"candidateSymbol\",\n      value: candidateSymbol,\n      onChange: event => {\n        setCandidateSymbol(event.target.value);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 294,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 298,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      id: \"candidateAddButton\",\n      onClick: addCandidateProposal,\n      children: \"Add Candidate Proposal\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 299,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 300,\n      columnNumber: 7\n    }, this), reasonRevertCanAdd, candidates.map((candidate, index) => {\n      return /*#__PURE__*/_jsxDEV(Candidate, {\n        candidate: candidate,\n        index: index,\n        contract: votingContract,\n        candidatesCountFunction: getCandidatesCount\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 304,\n        columnNumber: 16\n      }, this);\n    })]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 238,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"7vMAlll9p0IMNneHIO9tMU/SCbk=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["Candidate","Arbiter","useState","useEffect","abi","jsxDEV","_jsxDEV","ethers","require","App","_s","arbiterCount","setArbiterCount","arbiterAddress","setArbiterAddress","arbiterStatus","setArbiterStatus","candidatesCount","setCandidatesCount","votingContract","setContract","arbiterApprovalAddress","setArbiterApprovalAddress","reasonRevertApproval","setReasonRevertApproval","arbiterDelete","setArbiterDelete","reasonRevertDelete","setReasonRevertDelete","candidateAddress","setCandidateAddress","candidateName","setCandidateName","candidateSymbol","setCandidateSymbol","candidates","setCandidates","arbiters","setArbiters","reasonRevertCanAdd","setReasonRevertCanAdd","connect","window","ethereum","provider","providers","Web3Provider","signer","getSigner","Contract","getCandidatesCount","totalCan","getCandidateCount","num","toNumber","error","console","log","getArbiterCount","totalArbiters","getCandidates","getArbiters","setTimeout","c","i","arbiter","getArbiterStatus","push","length","utils","isAddress","resultObj","result","approved","toString","addArbiter","add","addAndApproveArbiter","wait","message","includes","deleteArbiter","deleted","addCandidateProposal","on","candidate","getCandidate","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","index","contract","arbiterCountFunction","htmlFor","id","value","onChange","event","target","onClick","candidatesCountFunction","_c","$RefreshReg$"],"sources":["/Users/mukuljindal/Local/projects/fuckingwork/client/src/App.js"],"sourcesContent":["import Candidate from \"./Components/Candidate.js\";\nimport Arbiter from \"./Components/Arbiter.js\";\nimport { useState, useEffect } from \"react\";\nimport abi from './abi.js';\nconst ethers = require(\"ethers\");\n\n//contract address : 0x5FbDB2315678afecb367f032d93F642f64180aa3\n\n\n//add getter functions inside the contract to actually access anything through mappings\n//to access values of a struct in mapping, first return the promise, then use the variable rather than doing simultaneously\n//use ethers@6.7.1 to deploy and use ethers@5.7.2 to run\n//if there's an rpc error, cleat activity logs on metamask->settings->advanced->clear\n\nfunction App() {\n\n  const [arbiterCount, setArbiterCount] = useState(0);\n  const [arbiterAddress, setArbiterAddress] = useState(\"\");\n  const [arbiterStatus, setArbiterStatus] = useState(\"\");\n  const [candidatesCount, setCandidatesCount] = useState(0);\n  const [votingContract, setContract] = useState(\"\");\n  const [arbiterApprovalAddress, setArbiterApprovalAddress] = useState(\"\");\n  const [reasonRevertApproval, setReasonRevertApproval] = useState(\"\");\n  const [arbiterDelete, setArbiterDelete] = useState(\"\");\n  const [reasonRevertDelete, setReasonRevertDelete] = useState(\"\");\n  const [candidateAddress, setCandidateAddress] = useState(\"\");\n  const [candidateName, setCandidateName] = useState(\"\");\n  const [candidateSymbol, setCandidateSymbol] = useState(\"\");\n  let [candidates, setCandidates] = useState([]);\n  let [arbiters, setArbiters] = useState([]);\n  const [reasonRevertCanAdd, setReasonRevertCanAdd] = useState(\"\");\n\n\n  async function connect() {\n    if (window.ethereum) {\n      const provider = new ethers.providers.Web3Provider(window.ethereum);\n\n      // const accounts = await window.ethereum.request({ method: 'eth_requestAccounts' });\n      // console.log('Connected accounts:', accounts);\n      const signer = provider.getSigner(0);\n\n      const votingContract = new ethers.Contract(\"0x5FbDB2315678afecb367f032d93F642f64180aa3\", abi, signer);\n      setContract(votingContract);\n\n    }\n  }\n\n  async function getCandidatesCount() {\n    try {\n      let totalCan = await votingContract.getCandidateCount();\n      let num = totalCan.toNumber();\n      setCandidatesCount(num);\n    }\n    catch (error) {\n      console.log(error);\n    }\n  }\n\n  async function getArbiterCount() {\n    const totalArbiters = await votingContract.getArbiterCount();\n    const num = totalArbiters.toNumber();\n    setArbiterCount(num);\n  }\n\n  useEffect(() => {\n    connect();\n    getCandidates();\n    getArbiters();\n  }, []);\n\n  setTimeout(() => {\n    getCandidatesCount();\n    getArbiterCount();\n  }, 500);\n\n  async function getArbiters() {\n    let c = [];\n    for (let i = 0; i < arbiterCount; i++) {\n      let arbiter = await votingContract.getArbiterStatus(i);\n      c.push(arbiter);\n    }\n    console.log(c);\n    setArbiters(c);\n  }\n\n  if (candidates.length !== candidatesCount) {\n    getCandidates();\n  }\n  if (arbiters.length !== arbiterCount) {\n    getArbiters();\n  }\n\n  async function getArbiterStatus() {\n    if (!ethers.utils.isAddress(arbiterAddress)) {\n      setArbiterStatus(\"Invalid Ethereum Address\");\n      setTimeout(() => {\n        setArbiterStatus(\"\");\n      }, 1600);\n      return;\n    }\n\n    const resultObj = await votingContract.getArbiterStatus(arbiterAddress);\n    const result = resultObj.approved;\n    setArbiterStatus(result.toString());\n    setTimeout(() => {\n      setArbiterAddress(\"\");\n      setArbiterStatus(\"\");\n    }, 1600);\n  }\n\n  async function addArbiter() {\n    try {\n      if (!ethers.utils.isAddress(arbiterApprovalAddress)) {\n        setReasonRevertApproval(\"Invalid Ethereum Address\");\n        setTimeout(() => {\n          setReasonRevertApproval(\"\");\n        }, 1600);\n        return;\n      }\n\n      let add = await votingContract.addAndApproveArbiter(arbiterApprovalAddress);\n      await add.wait();\n      console.log(add);\n    }\n    catch (error) {\n      setTimeout(() => {\n        if (error.message.includes(\"reverted with reason string 'You're not an Arbiter'\")) {\n          setReasonRevertApproval(\"Already Voted\");\n        } else if (error.message.includes(\"reverted with reason string 'Already Voted'\")) {\n          setReasonRevertApproval(\"Already Voted\");\n        } else {\n          console.log(\"Approve Arbiter Error:\", error);\n        }\n      }, 1600);\n\n    }\n  }\n\n  async function deleteArbiter() {\n    try {\n      if (!ethers.utils.isAddress(arbiterDelete)) {\n        setReasonRevertDelete(\"Invalid Ethereum Address\");\n        setTimeout(() => {\n          setReasonRevertDelete(\"\");\n        }, 1600);\n        return;\n      }\n\n      let deleted = await votingContract.deleteArbiter(arbiterDelete);\n      await deleted.wait();\n      setArbiterAddress(\"\");\n      setArbiterStatus(\"\");\n      console.log(deleted);\n    } catch (error) {\n      setTimeout(() => {\n        if (error.message.includes(\"reverted with reason string 'That's not an Arbiter'\")) {\n          setReasonRevertDelete(\"Address not an arbiter\");\n        } else if (error.message.includes(\"reverted with reason string 'You're not an Arbiter'\")) {\n          setReasonRevertDelete(\"You're not an arbiter\")\n        } else {\n          console.log(\"Delete Arbiter Error:\", error);\n        }\n      }, 1600);\n    }\n  }\n\n  async function addCandidateProposal() {\n    try {\n\n      if (!ethers.utils.isAddress(candidateAddress)) {\n        setReasonRevertCanAdd(\"Invalid Ethereum Address\");\n        setTimeout(() => {\n          setReasonRevertCanAdd(\"\");\n        }, 1600);\n        return;\n      }\n\n      if (candidateName === \"\" && candidateSymbol === \"\") {\n        setReasonRevertCanAdd(\"Empty Inputs\");\n        setTimeout(() => {\n          setReasonRevertCanAdd(\"\");\n        }, 1600);\n        return;\n      }\n\n      if (candidateName === \"\") {\n        setReasonRevertCanAdd(\"Empty Input\");\n        setTimeout(() => {\n          setReasonRevertCanAdd(\"\");\n        }, 1600);\n        return;\n      }\n\n      if (candidateSymbol === \"\") {\n        setReasonRevertCanAdd(\"Empty Input Symbol\");\n        setTimeout(() => {\n          setReasonRevertCanAdd(\"\");\n        }, 1600);\n        return;\n      }\n\n      const add = await votingContract.addCandidateProposal(candidateAddress, candidateName, candidateSymbol);\n      await add.wait();\n      console.log(add);\n\n      votingContract.on(\"CandidateAdded\", () => {\n        getCandidatesCount();\n      })\n    }\n    catch (error) {\n      setTimeout(() => {\n        if (error.message.includes(\"reverted with reason string 'Already Voted'\")) {\n          setReasonRevertCanAdd(\"Already Voted\");\n        } else if (error.message.includes(\"reverted with reason string 'You're not an Arbiter'\")) {\n          setReasonRevertCanAdd(\"You're not an  Arbiter\");\n        } else {\n          console.log(\"Candidate Add Error:\", error);\n        }\n      }, 1600)\n    }\n  }\n\n  async function getCandidates() {\n    let c = [];\n    for (let i = 0; i < candidatesCount; i++) {\n      let candidate = await votingContract.getCandidate(i);\n      c.push(candidate);\n    }\n    setCandidates(c);\n  }\n\n  if (candidates.length !== candidatesCount) {\n    getCandidates();\n  }\n\n\n  return (\n    <div className=\"App\">\n      <p>Arbiter Count : {arbiterCount}</p>\n      <br />\n      {arbiters.map((arbiter, index) => {\n        return <Arbiter arbiter={arbiter} key={index} index={index} contract={votingContract} arbiterCountFunction={getArbiterCount} />;\n\n      })}\n      <br />\n      <label htmlFor='arbiter?'>Arbiter </label>\n      <input id='arbiter?' value={arbiterAddress}\n        onChange={(event) => {\n          setArbiterAddress(event.target.value)\n        }} />\n      <button id='isAnArbiter' onClick={getArbiterStatus}>Check</button>\n      <p>Status : {arbiterStatus}</p>\n      <br />\n      <p>No. of candidates : {candidatesCount}</p>\n\n      <br />\n\n      <label htmlFor=\"addArbiter\">Enter arbiter for adding :</label>\n      <input id='addArbiter' value={arbiterApprovalAddress}\n        onChange={(event) => {\n          setArbiterApprovalAddress(event.target.value)\n        }} />\n      <button id=\"addArbiterButton\" onClick={addArbiter}>Add</button>\n\n      <br />\n\n      <p>{reasonRevertApproval}</p>\n\n\n      <label htmlFor=\"deleteArbiter\">Enter arbiter for delete :</label>\n      <input id='deleteArbiter' value={arbiterDelete}\n        onChange={(event) => {\n          setArbiterDelete(event.target.value);\n        }} />\n      <button id=\"deleteArbiterButton\" onClick={deleteArbiter}>Approve</button>\n\n      <br />\n\n      <p>{reasonRevertDelete}</p>\n\n      <label htmlFor=\"candidateAddress\">Enter candidate Address :</label>\n      <input id='candidateAddress' value={candidateAddress}\n        onChange={(event) => {\n          setCandidateAddress(event.target.value);\n        }} />\n      <br />\n      <label htmlFor=\"candidateName\">Enter candidate Name :</label>\n      <input id='candidateName' value={candidateName}\n        onChange={(event) => {\n          setCandidateName(event.target.value);\n        }} />\n      <br />\n      <label htmlFor=\"candidateSymbol\">Enter candidate Symbol :</label>\n      <input id='candidateSymbol' value={candidateSymbol}\n        onChange={(event) => {\n          setCandidateSymbol(event.target.value);\n        }} />\n      <br />\n      <button id=\"candidateAddButton\" onClick={addCandidateProposal}>Add Candidate Proposal</button>\n      <br />\n      {reasonRevertCanAdd}\n\n      {candidates.map((candidate, index) => {\n        return <Candidate candidate={candidate} key={index} index={index} contract={votingContract} candidatesCountFunction={getCandidatesCount} />;\n\n      })}\n\n    </div>\n  );\n}\n\nexport default App;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}